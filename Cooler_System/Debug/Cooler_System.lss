
Cooler_System.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000110e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  0000110e  000011a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000002b  00800074  00800074  000011b6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011b6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000011e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000290  00000000  00000000  00001224  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000046b6  00000000  00000000  000014b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001461  00000000  00000000  00005b6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001487  00000000  00000000  00006fcb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000748  00000000  00000000  00008454  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000fc5  00000000  00000000  00008b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002b29  00000000  00000000  00009b61  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  0000c68a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4b 00 	jmp	0x96	; 0x96 <__ctors_end>
       4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
       8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
       c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      10:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      14:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      18:	0c 94 f7 05 	jmp	0xbee	; 0xbee <__vector_6>
      1c:	0c 94 32 06 	jmp	0xc64	; 0xc64 <__vector_7>
      20:	0c 94 59 06 	jmp	0xcb2	; 0xcb2 <__vector_8>
      24:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__vector_9>
      28:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      2c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      34:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      38:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      3c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      40:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      44:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      48:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      4c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      50:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      54:	61 02       	muls	r22, r17
      56:	68 02       	muls	r22, r24
      58:	6f 02       	muls	r22, r31
      5a:	76 02       	muls	r23, r22
      5c:	7d 02       	muls	r23, r29
      5e:	84 02       	muls	r24, r20
      60:	8b 02       	muls	r24, r27
      62:	92 02       	muls	r25, r18
      64:	99 02       	muls	r25, r25
      66:	a1 02       	muls	r26, r17
      68:	a8 02       	muls	r26, r24
      6a:	b0 02       	muls	r27, r16
      6c:	b8 02       	muls	r27, r24
      6e:	c0 02       	muls	r28, r16
      70:	c8 02       	muls	r28, r24
      72:	d0 02       	muls	r29, r16
      74:	d8 02       	muls	r29, r24
      76:	e0 02       	muls	r30, r16
      78:	e8 02       	muls	r30, r24
      7a:	ef 02       	muls	r30, r31
      7c:	f7 02       	muls	r31, r23
      7e:	ff 02       	muls	r31, r31
      80:	07 03       	mulsu	r16, r23
      82:	0f 03       	fmul	r16, r23
      84:	17 03       	mulsu	r17, r23
      86:	1f 03       	fmul	r17, r23
      88:	27 03       	mulsu	r18, r23
      8a:	2f 03       	fmul	r18, r23
      8c:	36 03       	mulsu	r19, r22
      8e:	3e 03       	fmul	r19, r22
      90:	46 03       	mulsu	r20, r22
      92:	4e 03       	fmul	r20, r22

00000094 <__ctors_start>:
      94:	a8 05       	cpc	r26, r8

00000096 <__ctors_end>:
      96:	11 24       	eor	r1, r1
      98:	1f be       	out	0x3f, r1	; 63
      9a:	cf e5       	ldi	r28, 0x5F	; 95
      9c:	d8 e0       	ldi	r29, 0x08	; 8
      9e:	de bf       	out	0x3e, r29	; 62
      a0:	cd bf       	out	0x3d, r28	; 61

000000a2 <__do_copy_data>:
      a2:	10 e0       	ldi	r17, 0x00	; 0
      a4:	a0 e6       	ldi	r26, 0x60	; 96
      a6:	b0 e0       	ldi	r27, 0x00	; 0
      a8:	ee e0       	ldi	r30, 0x0E	; 14
      aa:	f1 e1       	ldi	r31, 0x11	; 17
      ac:	02 c0       	rjmp	.+4      	; 0xb2 <__do_copy_data+0x10>
      ae:	05 90       	lpm	r0, Z+
      b0:	0d 92       	st	X+, r0
      b2:	a4 37       	cpi	r26, 0x74	; 116
      b4:	b1 07       	cpc	r27, r17
      b6:	d9 f7       	brne	.-10     	; 0xae <__do_copy_data+0xc>

000000b8 <__do_clear_bss>:
      b8:	20 e0       	ldi	r18, 0x00	; 0
      ba:	a4 e7       	ldi	r26, 0x74	; 116
      bc:	b0 e0       	ldi	r27, 0x00	; 0
      be:	01 c0       	rjmp	.+2      	; 0xc2 <.do_clear_bss_start>

000000c0 <.do_clear_bss_loop>:
      c0:	1d 92       	st	X+, r1

000000c2 <.do_clear_bss_start>:
      c2:	af 39       	cpi	r26, 0x9F	; 159
      c4:	b2 07       	cpc	r27, r18
      c6:	e1 f7       	brne	.-8      	; 0xc0 <.do_clear_bss_loop>

000000c8 <__do_global_ctors>:
      c8:	10 e0       	ldi	r17, 0x00	; 0
      ca:	cb e4       	ldi	r28, 0x4B	; 75
      cc:	d0 e0       	ldi	r29, 0x00	; 0
      ce:	04 c0       	rjmp	.+8      	; 0xd8 <__do_global_ctors+0x10>
      d0:	21 97       	sbiw	r28, 0x01	; 1
      d2:	fe 01       	movw	r30, r28
      d4:	0e 94 4a 08 	call	0x1094	; 0x1094 <__tablejump2__>
      d8:	ca 34       	cpi	r28, 0x4A	; 74
      da:	d1 07       	cpc	r29, r17
      dc:	c9 f7       	brne	.-14     	; 0xd0 <__do_global_ctors+0x8>
      de:	0e 94 c4 04 	call	0x988	; 0x988 <main>
      e2:	0c 94 85 08 	jmp	0x110a	; 0x110a <_exit>

000000e6 <__bad_interrupt>:
      e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ea <_ZN9ADC_INPUT8ADC_InitE11ADC_Channel>:
* \Parameters (out): None                                                      
* \Return value:   : void                                 
*******************************************************************************/
 void ADC_INPUT::ADC_Init(ADC_Channel channel)
{
	 this->channel=channel;
      ea:	fc 01       	movw	r30, r24
      ec:	60 83       	st	Z, r22
	 
	ADMUX |= (1<<REFS0);		                                        /*Vref: Avcc, ADC channel: 0 */
      ee:	87 b1       	in	r24, 0x07	; 7
      f0:	80 64       	ori	r24, 0x40	; 64
      f2:	87 b9       	out	0x07, r24	; 7
#if (INT_ENABLE == 0)
    ADCSRA |=((1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)) ;		        /*Enable ADC, P=freq/128  */
      f4:	86 b1       	in	r24, 0x06	; 6
      f6:	87 68       	ori	r24, 0x87	; 135
      f8:	86 b9       	out	0x06, r24	; 6
      fa:	08 95       	ret

000000fc <_ZN9ADC_INPUTC1E11ADC_Channel>:
#include "ADC.h"

// default constructor
ADC_INPUT::ADC_INPUT(ADC_Channel channel)
{    
	 this->channel=channel;
      fc:	fc 01       	movw	r30, r24
      fe:	60 83       	st	Z, r22
	 ADC_Init(channel);
     100:	0e 94 75 00 	call	0xea	; 0xea <_ZN9ADC_INPUT8ADC_InitE11ADC_Channel>
     104:	08 95       	ret

00000106 <_ZN9ADC_INPUT15ADC_ChannelReadEv>:
* \Parameters (out): None                                                      
* \Return value:   : u16 Sample Digital value
*                                                                     
*******************************************************************************/
u16 ADC_INPUT::ADC_ChannelRead()
{
     106:	fc 01       	movw	r30, r24

	ADMUX|=(channel & 0x0f);		   /* set input channel */
     108:	97 b1       	in	r25, 0x07	; 7
     10a:	80 81       	ld	r24, Z
     10c:	8f 70       	andi	r24, 0x0F	; 15
     10e:	89 2b       	or	r24, r25
     110:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC);		       /* start conversion */
     112:	86 b1       	in	r24, 0x06	; 6
     114:	80 64       	ori	r24, 0x40	; 64
     116:	86 b9       	out	0x06, r24	; 6
	
	while (!(ADCSRA & (1<<ADIF)));	   /*monitor end of conversion interrupt flag */
     118:	34 9b       	sbis	0x06, 4	; 6
     11a:	fe cf       	rjmp	.-4      	; 0x118 <_ZN9ADC_INPUT15ADC_ChannelReadEv+0x12>
	ADCSRA|= (1<<ADIF);
     11c:	86 b1       	in	r24, 0x06	; 6
     11e:	80 61       	ori	r24, 0x10	; 16
     120:	86 b9       	out	0x06, r24	; 6
 			
	return ADCW;  	                   /*return ADC Word_(digital value)*/
     122:	84 b1       	in	r24, 0x04	; 4
     124:	95 b1       	in	r25, 0x05	; 5
}
     126:	08 95       	ret

00000128 <_ZN8DC_MOTORC1Ev>:
	else
	{
		IN1.DIO_CLR_Pin();
		IN2.DIO_SET_Pin();
	}
}
     128:	ef 92       	push	r14
     12a:	ff 92       	push	r15
     12c:	0f 93       	push	r16
     12e:	1f 93       	push	r17
     130:	cf 93       	push	r28
     132:	df 93       	push	r29
     134:	ec 01       	movw	r28, r24
     136:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_ZN3PINC1Ev>
     13a:	8e 01       	movw	r16, r28
     13c:	0d 5f       	subi	r16, 0xFD	; 253
     13e:	1f 4f       	sbci	r17, 0xFF	; 255
     140:	c8 01       	movw	r24, r16
     142:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_ZN3PINC1Ev>
     146:	7e 01       	movw	r14, r28
     148:	86 e0       	ldi	r24, 0x06	; 6
     14a:	e8 0e       	add	r14, r24
     14c:	f1 1c       	adc	r15, r1
     14e:	c7 01       	movw	r24, r14
     150:	0e 94 af 05 	call	0xb5e	; 0xb5e <_ZN3PWMC1Ev>
     154:	42 e0       	ldi	r20, 0x02	; 2
     156:	6e e1       	ldi	r22, 0x1E	; 30
     158:	ce 01       	movw	r24, r28
     15a:	0e 94 52 02 	call	0x4a4	; 0x4a4 <_ZN3PIN12DIO_Init_PinE5PinID9Direction>
     15e:	42 e0       	ldi	r20, 0x02	; 2
     160:	6d e1       	ldi	r22, 0x1D	; 29
     162:	c8 01       	movw	r24, r16
     164:	0e 94 52 02 	call	0x4a4	; 0x4a4 <_ZN3PIN12DIO_Init_PinE5PinID9Direction>
     168:	00 e0       	ldi	r16, 0x00	; 0
     16a:	10 e0       	ldi	r17, 0x00	; 0
     16c:	28 ec       	ldi	r18, 0xC8	; 200
     16e:	32 e4       	ldi	r19, 0x42	; 66
     170:	40 e0       	ldi	r20, 0x00	; 0
     172:	50 e0       	ldi	r21, 0x00	; 0
     174:	68 e4       	ldi	r22, 0x48	; 72
     176:	72 e4       	ldi	r23, 0x42	; 66
     178:	c7 01       	movw	r24, r14
     17a:	0e 94 bc 05 	call	0xb78	; 0xb78 <_ZN3PWM11T1_PhasePWMEff>
     17e:	df 91       	pop	r29
     180:	cf 91       	pop	r28
     182:	1f 91       	pop	r17
     184:	0f 91       	pop	r16
     186:	ff 90       	pop	r15
     188:	ef 90       	pop	r14
     18a:	08 95       	ret

0000018c <_ZN8DC_MOTOR9Motor_RUNEv>:
     18c:	cf 93       	push	r28
     18e:	df 93       	push	r29
     190:	ec 01       	movw	r28, r24
     192:	0e 94 ed 00 	call	0x1da	; 0x1da <_ZN3PIN11DIO_SET_PinEv>
     196:	ce 01       	movw	r24, r28
     198:	03 96       	adiw	r24, 0x03	; 3
     19a:	0e 94 27 01 	call	0x24e	; 0x24e <_ZN3PIN11DIO_CLR_PinEv>
     19e:	df 91       	pop	r29
     1a0:	cf 91       	pop	r28
     1a2:	08 95       	ret

000001a4 <_ZN8DC_MOTOR10Motor_DutyEh>:

void DC_MOTOR::Motor_Duty(u8 duty)
{
     1a4:	0f 93       	push	r16
     1a6:	1f 93       	push	r17
     1a8:	cf 93       	push	r28
     1aa:	df 93       	push	r29
     1ac:	ec 01       	movw	r28, r24
	EN.T1_PhasePWM(50,duty);
     1ae:	70 e0       	ldi	r23, 0x00	; 0
     1b0:	80 e0       	ldi	r24, 0x00	; 0
     1b2:	90 e0       	ldi	r25, 0x00	; 0
     1b4:	0e 94 26 07 	call	0xe4c	; 0xe4c <__floatunsisf>
     1b8:	8b 01       	movw	r16, r22
     1ba:	9c 01       	movw	r18, r24
     1bc:	40 e0       	ldi	r20, 0x00	; 0
     1be:	50 e0       	ldi	r21, 0x00	; 0
     1c0:	68 e4       	ldi	r22, 0x48	; 72
     1c2:	72 e4       	ldi	r23, 0x42	; 66
     1c4:	ce 01       	movw	r24, r28
     1c6:	06 96       	adiw	r24, 0x06	; 6
     1c8:	0e 94 bc 05 	call	0xb78	; 0xb78 <_ZN3PWM11T1_PhasePWMEff>
     1cc:	df 91       	pop	r29
     1ce:	cf 91       	pop	r28
     1d0:	1f 91       	pop	r17
     1d2:	0f 91       	pop	r16
     1d4:	08 95       	ret

000001d6 <_ZN3PINC1Ev>:
		port_state = PIND;
		break;
    }	
	return port_state;
	
}
     1d6:	08 95       	ret

000001d8 <_ZN4PORTC1Ev>:
     1d8:	08 95       	ret

000001da <_ZN3PIN11DIO_SET_PinEv>:
     1da:	fc 01       	movw	r30, r24
     1dc:	90 81       	ld	r25, Z
     1de:	91 11       	cpse	r25, r1
     1e0:	0c c0       	rjmp	.+24     	; 0x1fa <_ZN3PIN11DIO_SET_PinEv+0x20>
     1e2:	2b b3       	in	r18, 0x1b	; 27
     1e4:	81 e0       	ldi	r24, 0x01	; 1
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	01 80       	ldd	r0, Z+1	; 0x01
     1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <_ZN3PIN11DIO_SET_PinEv+0x16>
     1ec:	88 0f       	add	r24, r24
     1ee:	99 1f       	adc	r25, r25
     1f0:	0a 94       	dec	r0
     1f2:	e2 f7       	brpl	.-8      	; 0x1ec <_ZN3PIN11DIO_SET_PinEv+0x12>
     1f4:	82 2b       	or	r24, r18
     1f6:	8b bb       	out	0x1b, r24	; 27
     1f8:	08 95       	ret
     1fa:	91 30       	cpi	r25, 0x01	; 1
     1fc:	61 f4       	brne	.+24     	; 0x216 <_ZN3PIN11DIO_SET_PinEv+0x3c>
     1fe:	28 b3       	in	r18, 0x18	; 24
     200:	81 e0       	ldi	r24, 0x01	; 1
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	01 80       	ldd	r0, Z+1	; 0x01
     206:	02 c0       	rjmp	.+4      	; 0x20c <_ZN3PIN11DIO_SET_PinEv+0x32>
     208:	88 0f       	add	r24, r24
     20a:	99 1f       	adc	r25, r25
     20c:	0a 94       	dec	r0
     20e:	e2 f7       	brpl	.-8      	; 0x208 <_ZN3PIN11DIO_SET_PinEv+0x2e>
     210:	82 2b       	or	r24, r18
     212:	88 bb       	out	0x18, r24	; 24
     214:	08 95       	ret
     216:	92 30       	cpi	r25, 0x02	; 2
     218:	61 f4       	brne	.+24     	; 0x232 <_ZN3PIN11DIO_SET_PinEv+0x58>
     21a:	25 b3       	in	r18, 0x15	; 21
     21c:	81 e0       	ldi	r24, 0x01	; 1
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	01 80       	ldd	r0, Z+1	; 0x01
     222:	02 c0       	rjmp	.+4      	; 0x228 <_ZN3PIN11DIO_SET_PinEv+0x4e>
     224:	88 0f       	add	r24, r24
     226:	99 1f       	adc	r25, r25
     228:	0a 94       	dec	r0
     22a:	e2 f7       	brpl	.-8      	; 0x224 <_ZN3PIN11DIO_SET_PinEv+0x4a>
     22c:	82 2b       	or	r24, r18
     22e:	85 bb       	out	0x15, r24	; 21
     230:	08 95       	ret
     232:	93 30       	cpi	r25, 0x03	; 3
     234:	59 f4       	brne	.+22     	; 0x24c <_ZN3PIN11DIO_SET_PinEv+0x72>
     236:	22 b3       	in	r18, 0x12	; 18
     238:	81 e0       	ldi	r24, 0x01	; 1
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	01 80       	ldd	r0, Z+1	; 0x01
     23e:	02 c0       	rjmp	.+4      	; 0x244 <_ZN3PIN11DIO_SET_PinEv+0x6a>
     240:	88 0f       	add	r24, r24
     242:	99 1f       	adc	r25, r25
     244:	0a 94       	dec	r0
     246:	e2 f7       	brpl	.-8      	; 0x240 <_ZN3PIN11DIO_SET_PinEv+0x66>
     248:	82 2b       	or	r24, r18
     24a:	82 bb       	out	0x12, r24	; 18
     24c:	08 95       	ret

0000024e <_ZN3PIN11DIO_CLR_PinEv>:
     24e:	fc 01       	movw	r30, r24
     250:	90 81       	ld	r25, Z
     252:	91 11       	cpse	r25, r1
     254:	0d c0       	rjmp	.+26     	; 0x270 <_ZN3PIN11DIO_CLR_PinEv+0x22>
     256:	2b b3       	in	r18, 0x1b	; 27
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	01 80       	ldd	r0, Z+1	; 0x01
     25e:	02 c0       	rjmp	.+4      	; 0x264 <_ZN3PIN11DIO_CLR_PinEv+0x16>
     260:	88 0f       	add	r24, r24
     262:	99 1f       	adc	r25, r25
     264:	0a 94       	dec	r0
     266:	e2 f7       	brpl	.-8      	; 0x260 <_ZN3PIN11DIO_CLR_PinEv+0x12>
     268:	80 95       	com	r24
     26a:	82 23       	and	r24, r18
     26c:	8b bb       	out	0x1b, r24	; 27
     26e:	08 95       	ret
     270:	91 30       	cpi	r25, 0x01	; 1
     272:	69 f4       	brne	.+26     	; 0x28e <_ZN3PIN11DIO_CLR_PinEv+0x40>
     274:	28 b3       	in	r18, 0x18	; 24
     276:	81 e0       	ldi	r24, 0x01	; 1
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	01 80       	ldd	r0, Z+1	; 0x01
     27c:	02 c0       	rjmp	.+4      	; 0x282 <_ZN3PIN11DIO_CLR_PinEv+0x34>
     27e:	88 0f       	add	r24, r24
     280:	99 1f       	adc	r25, r25
     282:	0a 94       	dec	r0
     284:	e2 f7       	brpl	.-8      	; 0x27e <_ZN3PIN11DIO_CLR_PinEv+0x30>
     286:	80 95       	com	r24
     288:	82 23       	and	r24, r18
     28a:	88 bb       	out	0x18, r24	; 24
     28c:	08 95       	ret
     28e:	92 30       	cpi	r25, 0x02	; 2
     290:	69 f4       	brne	.+26     	; 0x2ac <_ZN3PIN11DIO_CLR_PinEv+0x5e>
     292:	25 b3       	in	r18, 0x15	; 21
     294:	81 e0       	ldi	r24, 0x01	; 1
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	01 80       	ldd	r0, Z+1	; 0x01
     29a:	02 c0       	rjmp	.+4      	; 0x2a0 <_ZN3PIN11DIO_CLR_PinEv+0x52>
     29c:	88 0f       	add	r24, r24
     29e:	99 1f       	adc	r25, r25
     2a0:	0a 94       	dec	r0
     2a2:	e2 f7       	brpl	.-8      	; 0x29c <_ZN3PIN11DIO_CLR_PinEv+0x4e>
     2a4:	80 95       	com	r24
     2a6:	82 23       	and	r24, r18
     2a8:	85 bb       	out	0x15, r24	; 21
     2aa:	08 95       	ret
     2ac:	93 30       	cpi	r25, 0x03	; 3
     2ae:	61 f4       	brne	.+24     	; 0x2c8 <_ZN3PIN11DIO_CLR_PinEv+0x7a>
     2b0:	22 b3       	in	r18, 0x12	; 18
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	01 80       	ldd	r0, Z+1	; 0x01
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <_ZN3PIN11DIO_CLR_PinEv+0x70>
     2ba:	88 0f       	add	r24, r24
     2bc:	99 1f       	adc	r25, r25
     2be:	0a 94       	dec	r0
     2c0:	e2 f7       	brpl	.-8      	; 0x2ba <_ZN3PIN11DIO_CLR_PinEv+0x6c>
     2c2:	80 95       	com	r24
     2c4:	82 23       	and	r24, r18
     2c6:	82 bb       	out	0x12, r24	; 18
     2c8:	08 95       	ret

000002ca <_ZN4PORT13DIO_Init_PortE6PortIDh>:
     2ca:	fc 01       	movw	r30, r24
     2cc:	60 83       	st	Z, r22
     2ce:	41 83       	std	Z+1, r20	; 0x01
     2d0:	61 30       	cpi	r22, 0x01	; 1
     2d2:	41 f0       	breq	.+16     	; 0x2e4 <_ZN4PORT13DIO_Init_PortE6PortIDh+0x1a>
     2d4:	28 f0       	brcs	.+10     	; 0x2e0 <_ZN4PORT13DIO_Init_PortE6PortIDh+0x16>
     2d6:	62 30       	cpi	r22, 0x02	; 2
     2d8:	39 f0       	breq	.+14     	; 0x2e8 <_ZN4PORT13DIO_Init_PortE6PortIDh+0x1e>
     2da:	63 30       	cpi	r22, 0x03	; 3
     2dc:	39 f0       	breq	.+14     	; 0x2ec <_ZN4PORT13DIO_Init_PortE6PortIDh+0x22>
     2de:	08 95       	ret
     2e0:	4a bb       	out	0x1a, r20	; 26
     2e2:	08 95       	ret
     2e4:	47 bb       	out	0x17, r20	; 23
     2e6:	08 95       	ret
     2e8:	44 bb       	out	0x14, r20	; 20
     2ea:	08 95       	ret
     2ec:	41 bb       	out	0x11, r20	; 17
     2ee:	08 95       	ret

000002f0 <_ZN4PORT14DIO_Write_PortEh>:
     2f0:	fc 01       	movw	r30, r24
     2f2:	80 81       	ld	r24, Z
     2f4:	81 30       	cpi	r24, 0x01	; 1
     2f6:	41 f0       	breq	.+16     	; 0x308 <_ZN4PORT14DIO_Write_PortEh+0x18>
     2f8:	28 f0       	brcs	.+10     	; 0x304 <_ZN4PORT14DIO_Write_PortEh+0x14>
     2fa:	82 30       	cpi	r24, 0x02	; 2
     2fc:	39 f0       	breq	.+14     	; 0x30c <_ZN4PORT14DIO_Write_PortEh+0x1c>
     2fe:	83 30       	cpi	r24, 0x03	; 3
     300:	39 f0       	breq	.+14     	; 0x310 <_ZN4PORT14DIO_Write_PortEh+0x20>
     302:	08 95       	ret
     304:	6b bb       	out	0x1b, r22	; 27
     306:	08 95       	ret
     308:	68 bb       	out	0x18, r22	; 24
     30a:	08 95       	ret
     30c:	65 bb       	out	0x15, r22	; 21
     30e:	08 95       	ret
     310:	62 bb       	out	0x12, r22	; 18
     312:	08 95       	ret

00000314 <_Z14Set_PortA_Pinsh9Direction>:
 *  DIO Local Methods Implementation
 *********************************************************************************************************************/

void Set_PortA_Pins(u8 pin ,Direction state)
{
	switch(state)
     314:	61 30       	cpi	r22, 0x01	; 1
     316:	81 f0       	breq	.+32     	; 0x338 <_Z14Set_PortA_Pinsh9Direction+0x24>
     318:	08 f1       	brcs	.+66     	; 0x35c <_Z14Set_PortA_Pinsh9Direction+0x48>
     31a:	62 30       	cpi	r22, 0x02	; 2
     31c:	61 f5       	brne	.+88     	; 0x376 <_Z14Set_PortA_Pinsh9Direction+0x62>
	{
		case OUT:
		SET_BIT(DDRA,pin);
     31e:	4a b3       	in	r20, 0x1a	; 26
     320:	21 e0       	ldi	r18, 0x01	; 1
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	b9 01       	movw	r22, r18
     326:	02 c0       	rjmp	.+4      	; 0x32c <_Z14Set_PortA_Pinsh9Direction+0x18>
     328:	66 0f       	add	r22, r22
     32a:	77 1f       	adc	r23, r23
     32c:	8a 95       	dec	r24
     32e:	e2 f7       	brpl	.-8      	; 0x328 <_Z14Set_PortA_Pinsh9Direction+0x14>
     330:	cb 01       	movw	r24, r22
     332:	84 2b       	or	r24, r20
     334:	8a bb       	out	0x1a, r24	; 26
		break;
     336:	08 95       	ret
		case IN_UP:
		CLR_BIT(DDRA,pin);
     338:	4a b3       	in	r20, 0x1a	; 26
     33a:	21 e0       	ldi	r18, 0x01	; 1
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	b9 01       	movw	r22, r18
     340:	02 c0       	rjmp	.+4      	; 0x346 <_Z14Set_PortA_Pinsh9Direction+0x32>
     342:	66 0f       	add	r22, r22
     344:	77 1f       	adc	r23, r23
     346:	8a 95       	dec	r24
     348:	e2 f7       	brpl	.-8      	; 0x342 <_Z14Set_PortA_Pinsh9Direction+0x2e>
     34a:	cb 01       	movw	r24, r22
     34c:	96 2f       	mov	r25, r22
     34e:	90 95       	com	r25
     350:	94 23       	and	r25, r20
     352:	9a bb       	out	0x1a, r25	; 26
		SET_BIT(PORTA,pin);
     354:	9b b3       	in	r25, 0x1b	; 27
     356:	89 2b       	or	r24, r25
     358:	8b bb       	out	0x1b, r24	; 27
		break;
     35a:	08 95       	ret
		case IN_FREE:
		CLR_BIT(DDRA,pin);
     35c:	4a b3       	in	r20, 0x1a	; 26
     35e:	21 e0       	ldi	r18, 0x01	; 1
     360:	30 e0       	ldi	r19, 0x00	; 0
     362:	b9 01       	movw	r22, r18
     364:	02 c0       	rjmp	.+4      	; 0x36a <_Z14Set_PortA_Pinsh9Direction+0x56>
     366:	66 0f       	add	r22, r22
     368:	77 1f       	adc	r23, r23
     36a:	8a 95       	dec	r24
     36c:	e2 f7       	brpl	.-8      	; 0x366 <_Z14Set_PortA_Pinsh9Direction+0x52>
     36e:	cb 01       	movw	r24, r22
     370:	80 95       	com	r24
     372:	84 23       	and	r24, r20
     374:	8a bb       	out	0x1a, r24	; 26
     376:	08 95       	ret

00000378 <_Z14Set_PortB_Pinsh9Direction>:
	}
	
}
void Set_PortB_Pins(u8 pin ,Direction state)
{
	switch(state)
     378:	61 30       	cpi	r22, 0x01	; 1
     37a:	81 f0       	breq	.+32     	; 0x39c <_Z14Set_PortB_Pinsh9Direction+0x24>
     37c:	08 f1       	brcs	.+66     	; 0x3c0 <_Z14Set_PortB_Pinsh9Direction+0x48>
     37e:	62 30       	cpi	r22, 0x02	; 2
     380:	61 f5       	brne	.+88     	; 0x3da <_Z14Set_PortB_Pinsh9Direction+0x62>
	{
		case OUT:
		SET_BIT(DDRB,pin);
     382:	47 b3       	in	r20, 0x17	; 23
     384:	21 e0       	ldi	r18, 0x01	; 1
     386:	30 e0       	ldi	r19, 0x00	; 0
     388:	b9 01       	movw	r22, r18
     38a:	02 c0       	rjmp	.+4      	; 0x390 <_Z14Set_PortB_Pinsh9Direction+0x18>
     38c:	66 0f       	add	r22, r22
     38e:	77 1f       	adc	r23, r23
     390:	8a 95       	dec	r24
     392:	e2 f7       	brpl	.-8      	; 0x38c <_Z14Set_PortB_Pinsh9Direction+0x14>
     394:	cb 01       	movw	r24, r22
     396:	84 2b       	or	r24, r20
     398:	87 bb       	out	0x17, r24	; 23
		break;
     39a:	08 95       	ret
		case IN_UP:
		CLR_BIT(DDRB,pin);
     39c:	47 b3       	in	r20, 0x17	; 23
     39e:	21 e0       	ldi	r18, 0x01	; 1
     3a0:	30 e0       	ldi	r19, 0x00	; 0
     3a2:	b9 01       	movw	r22, r18
     3a4:	02 c0       	rjmp	.+4      	; 0x3aa <_Z14Set_PortB_Pinsh9Direction+0x32>
     3a6:	66 0f       	add	r22, r22
     3a8:	77 1f       	adc	r23, r23
     3aa:	8a 95       	dec	r24
     3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <_Z14Set_PortB_Pinsh9Direction+0x2e>
     3ae:	cb 01       	movw	r24, r22
     3b0:	96 2f       	mov	r25, r22
     3b2:	90 95       	com	r25
     3b4:	94 23       	and	r25, r20
     3b6:	97 bb       	out	0x17, r25	; 23
		SET_BIT(PORTB,pin);
     3b8:	98 b3       	in	r25, 0x18	; 24
     3ba:	89 2b       	or	r24, r25
     3bc:	88 bb       	out	0x18, r24	; 24
		break;
     3be:	08 95       	ret
		case IN_FREE:
		CLR_BIT(DDRB,pin);
     3c0:	47 b3       	in	r20, 0x17	; 23
     3c2:	21 e0       	ldi	r18, 0x01	; 1
     3c4:	30 e0       	ldi	r19, 0x00	; 0
     3c6:	b9 01       	movw	r22, r18
     3c8:	02 c0       	rjmp	.+4      	; 0x3ce <_Z14Set_PortB_Pinsh9Direction+0x56>
     3ca:	66 0f       	add	r22, r22
     3cc:	77 1f       	adc	r23, r23
     3ce:	8a 95       	dec	r24
     3d0:	e2 f7       	brpl	.-8      	; 0x3ca <_Z14Set_PortB_Pinsh9Direction+0x52>
     3d2:	cb 01       	movw	r24, r22
     3d4:	80 95       	com	r24
     3d6:	84 23       	and	r24, r20
     3d8:	87 bb       	out	0x17, r24	; 23
     3da:	08 95       	ret

000003dc <_Z14Set_PortC_Pinsh9Direction>:
	
}
void Set_PortC_Pins(u8 pin ,Direction state)
{
	
	switch(state)
     3dc:	61 30       	cpi	r22, 0x01	; 1
     3de:	81 f0       	breq	.+32     	; 0x400 <__EEPROM_REGION_LENGTH__>
     3e0:	08 f1       	brcs	.+66     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     3e2:	62 30       	cpi	r22, 0x02	; 2
     3e4:	61 f5       	brne	.+88     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
	{
		case OUT:
		SET_BIT(DDRC,pin);
     3e6:	44 b3       	in	r20, 0x14	; 20
     3e8:	21 e0       	ldi	r18, 0x01	; 1
     3ea:	30 e0       	ldi	r19, 0x00	; 0
     3ec:	b9 01       	movw	r22, r18
     3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <_Z14Set_PortC_Pinsh9Direction+0x18>
     3f0:	66 0f       	add	r22, r22
     3f2:	77 1f       	adc	r23, r23
     3f4:	8a 95       	dec	r24
     3f6:	e2 f7       	brpl	.-8      	; 0x3f0 <_Z14Set_PortC_Pinsh9Direction+0x14>
     3f8:	cb 01       	movw	r24, r22
     3fa:	84 2b       	or	r24, r20
     3fc:	84 bb       	out	0x14, r24	; 20
		break;
     3fe:	08 95       	ret
		case IN_UP:
		CLR_BIT(DDRC,pin);
     400:	44 b3       	in	r20, 0x14	; 20
     402:	21 e0       	ldi	r18, 0x01	; 1
     404:	30 e0       	ldi	r19, 0x00	; 0
     406:	b9 01       	movw	r22, r18
     408:	02 c0       	rjmp	.+4      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     40a:	66 0f       	add	r22, r22
     40c:	77 1f       	adc	r23, r23
     40e:	8a 95       	dec	r24
     410:	e2 f7       	brpl	.-8      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
     412:	cb 01       	movw	r24, r22
     414:	96 2f       	mov	r25, r22
     416:	90 95       	com	r25
     418:	94 23       	and	r25, r20
     41a:	94 bb       	out	0x14, r25	; 20
		SET_BIT(PORTC,pin);
     41c:	95 b3       	in	r25, 0x15	; 21
     41e:	89 2b       	or	r24, r25
     420:	85 bb       	out	0x15, r24	; 21
		break;
     422:	08 95       	ret
		case IN_FREE:
		CLR_BIT(DDRC,pin);
     424:	44 b3       	in	r20, 0x14	; 20
     426:	21 e0       	ldi	r18, 0x01	; 1
     428:	30 e0       	ldi	r19, 0x00	; 0
     42a:	b9 01       	movw	r22, r18
     42c:	02 c0       	rjmp	.+4      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     42e:	66 0f       	add	r22, r22
     430:	77 1f       	adc	r23, r23
     432:	8a 95       	dec	r24
     434:	e2 f7       	brpl	.-8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     436:	cb 01       	movw	r24, r22
     438:	80 95       	com	r24
     43a:	84 23       	and	r24, r20
     43c:	84 bb       	out	0x14, r24	; 20
     43e:	08 95       	ret

00000440 <_Z14Set_PortD_Pinsh9Direction>:
	}
	
}
void Set_PortD_Pins(u8 pin ,Direction state)
{
	switch(state)
     440:	61 30       	cpi	r22, 0x01	; 1
     442:	81 f0       	breq	.+32     	; 0x464 <_Z14Set_PortD_Pinsh9Direction+0x24>
     444:	08 f1       	brcs	.+66     	; 0x488 <_Z14Set_PortD_Pinsh9Direction+0x48>
     446:	62 30       	cpi	r22, 0x02	; 2
     448:	61 f5       	brne	.+88     	; 0x4a2 <_Z14Set_PortD_Pinsh9Direction+0x62>
	{
		case OUT:
		SET_BIT(DDRD,pin);
     44a:	41 b3       	in	r20, 0x11	; 17
     44c:	21 e0       	ldi	r18, 0x01	; 1
     44e:	30 e0       	ldi	r19, 0x00	; 0
     450:	b9 01       	movw	r22, r18
     452:	02 c0       	rjmp	.+4      	; 0x458 <_Z14Set_PortD_Pinsh9Direction+0x18>
     454:	66 0f       	add	r22, r22
     456:	77 1f       	adc	r23, r23
     458:	8a 95       	dec	r24
     45a:	e2 f7       	brpl	.-8      	; 0x454 <_Z14Set_PortD_Pinsh9Direction+0x14>
     45c:	cb 01       	movw	r24, r22
     45e:	84 2b       	or	r24, r20
     460:	81 bb       	out	0x11, r24	; 17
		break;
     462:	08 95       	ret
		case IN_UP:
		CLR_BIT(DDRD,pin);
     464:	41 b3       	in	r20, 0x11	; 17
     466:	21 e0       	ldi	r18, 0x01	; 1
     468:	30 e0       	ldi	r19, 0x00	; 0
     46a:	b9 01       	movw	r22, r18
     46c:	02 c0       	rjmp	.+4      	; 0x472 <_Z14Set_PortD_Pinsh9Direction+0x32>
     46e:	66 0f       	add	r22, r22
     470:	77 1f       	adc	r23, r23
     472:	8a 95       	dec	r24
     474:	e2 f7       	brpl	.-8      	; 0x46e <_Z14Set_PortD_Pinsh9Direction+0x2e>
     476:	cb 01       	movw	r24, r22
     478:	96 2f       	mov	r25, r22
     47a:	90 95       	com	r25
     47c:	94 23       	and	r25, r20
     47e:	91 bb       	out	0x11, r25	; 17
		SET_BIT(PORTD,pin);
     480:	92 b3       	in	r25, 0x12	; 18
     482:	89 2b       	or	r24, r25
     484:	82 bb       	out	0x12, r24	; 18
		break;
     486:	08 95       	ret
		case IN_FREE:
		CLR_BIT(DDRD,pin);
     488:	41 b3       	in	r20, 0x11	; 17
     48a:	21 e0       	ldi	r18, 0x01	; 1
     48c:	30 e0       	ldi	r19, 0x00	; 0
     48e:	b9 01       	movw	r22, r18
     490:	02 c0       	rjmp	.+4      	; 0x496 <_Z14Set_PortD_Pinsh9Direction+0x56>
     492:	66 0f       	add	r22, r22
     494:	77 1f       	adc	r23, r23
     496:	8a 95       	dec	r24
     498:	e2 f7       	brpl	.-8      	; 0x492 <_Z14Set_PortD_Pinsh9Direction+0x52>
     49a:	cb 01       	movw	r24, r22
     49c:	80 95       	com	r24
     49e:	84 23       	and	r24, r20
     4a0:	81 bb       	out	0x11, r24	; 17
     4a2:	08 95       	ret

000004a4 <_ZN3PIN12DIO_Init_PinE5PinID9Direction>:
* \Parameters (out): None
* \Return value:   : Std_ReturnType  E_OK
*                                    E_NOT_OK
*******************************************************************************/
void PIN::DIO_Init_Pin(PinID p ,Direction state)
{
     4a4:	0f 93       	push	r16
     4a6:	1f 93       	push	r17
   switch(p)
     4a8:	06 2f       	mov	r16, r22
     4aa:	10 e0       	ldi	r17, 0x00	; 0
     4ac:	00 32       	cpi	r16, 0x20	; 32
     4ae:	11 05       	cpc	r17, r1
     4b0:	08 f0       	brcs	.+2      	; 0x4b4 <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x10>
     4b2:	fb c0       	rjmp	.+502    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
     4b4:	64 2f       	mov	r22, r20
     4b6:	dc 01       	movw	r26, r24
     4b8:	f8 01       	movw	r30, r16
     4ba:	e6 5d       	subi	r30, 0xD6	; 214
     4bc:	ff 4f       	sbci	r31, 0xFF	; 255
     4be:	0c 94 4a 08 	jmp	0x1094	; 0x1094 <__tablejump2__>
   {
/*************PORT-A***************/		   
	 case PIN_0A:
		this->port=PortA;
     4c2:	1c 92       	st	X, r1
		this->pin =0;
     4c4:	11 96       	adiw	r26, 0x01	; 1
     4c6:	1c 92       	st	X, r1
		Set_PortA_Pins(0,state);
     4c8:	80 e0       	ldi	r24, 0x00	; 0
     4ca:	0e 94 8a 01 	call	0x314	; 0x314 <_Z14Set_PortA_Pinsh9Direction>
		break;
     4ce:	ed c0       	rjmp	.+474    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_1A:
		this->port=PortA;
     4d0:	1c 92       	st	X, r1
		this->pin =1;
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	11 96       	adiw	r26, 0x01	; 1
     4d6:	8c 93       	st	X, r24
	    Set_PortA_Pins(1,state);
     4d8:	0e 94 8a 01 	call	0x314	; 0x314 <_Z14Set_PortA_Pinsh9Direction>
	    break;
     4dc:	e6 c0       	rjmp	.+460    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_2A:
		this->port=PortA;
     4de:	1c 92       	st	X, r1
		this->pin =2;
     4e0:	82 e0       	ldi	r24, 0x02	; 2
     4e2:	11 96       	adiw	r26, 0x01	; 1
     4e4:	8c 93       	st	X, r24
	    Set_PortA_Pins(2,state);
     4e6:	0e 94 8a 01 	call	0x314	; 0x314 <_Z14Set_PortA_Pinsh9Direction>
	    break;
     4ea:	df c0       	rjmp	.+446    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_3A:
		this->port=PortA;
     4ec:	1c 92       	st	X, r1
		this->pin =3;
     4ee:	83 e0       	ldi	r24, 0x03	; 3
     4f0:	11 96       	adiw	r26, 0x01	; 1
     4f2:	8c 93       	st	X, r24
	    Set_PortA_Pins(3,state);
     4f4:	0e 94 8a 01 	call	0x314	; 0x314 <_Z14Set_PortA_Pinsh9Direction>
	    break;	
     4f8:	d8 c0       	rjmp	.+432    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_4A:
		this->port=PortA;
     4fa:	1c 92       	st	X, r1
		this->pin =4;
     4fc:	84 e0       	ldi	r24, 0x04	; 4
     4fe:	11 96       	adiw	r26, 0x01	; 1
     500:	8c 93       	st	X, r24
	    Set_PortA_Pins(4,state);
     502:	0e 94 8a 01 	call	0x314	; 0x314 <_Z14Set_PortA_Pinsh9Direction>
	    break;	
     506:	d1 c0       	rjmp	.+418    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_5A:
		this->port=PortA;
     508:	1c 92       	st	X, r1
		this->pin =5;
     50a:	85 e0       	ldi	r24, 0x05	; 5
     50c:	11 96       	adiw	r26, 0x01	; 1
     50e:	8c 93       	st	X, r24
		Set_PortA_Pins(5,state);
     510:	0e 94 8a 01 	call	0x314	; 0x314 <_Z14Set_PortA_Pinsh9Direction>
		break;
     514:	ca c0       	rjmp	.+404    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_6A:
		this->port=PortA;
     516:	1c 92       	st	X, r1
		this->pin =6;
     518:	86 e0       	ldi	r24, 0x06	; 6
     51a:	11 96       	adiw	r26, 0x01	; 1
     51c:	8c 93       	st	X, r24
		Set_PortA_Pins(6,state);
     51e:	0e 94 8a 01 	call	0x314	; 0x314 <_Z14Set_PortA_Pinsh9Direction>
		break;
     522:	c3 c0       	rjmp	.+390    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_7A:
		this->port=PortA;
     524:	1c 92       	st	X, r1
		this->pin =7;
     526:	87 e0       	ldi	r24, 0x07	; 7
     528:	11 96       	adiw	r26, 0x01	; 1
     52a:	8c 93       	st	X, r24
		Set_PortA_Pins(7,state);
     52c:	0e 94 8a 01 	call	0x314	; 0x314 <_Z14Set_PortA_Pinsh9Direction>
		break;
     530:	bc c0       	rjmp	.+376    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 	
/*************PORT-B***************/	   
	 case PIN_0B:
		this->port=PortB;
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	8c 93       	st	X, r24
		this->pin =0;
     536:	11 96       	adiw	r26, 0x01	; 1
     538:	1c 92       	st	X, r1
		Set_PortB_Pins(0,state);
     53a:	80 e0       	ldi	r24, 0x00	; 0
     53c:	0e 94 bc 01 	call	0x378	; 0x378 <_Z14Set_PortB_Pinsh9Direction>
		break;
     540:	b4 c0       	rjmp	.+360    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_1B:
		this->port=PortB;
     542:	81 e0       	ldi	r24, 0x01	; 1
     544:	8c 93       	st	X, r24
		this->pin =1;
     546:	11 96       	adiw	r26, 0x01	; 1
     548:	8c 93       	st	X, r24
		Set_PortB_Pins(1,state);
     54a:	0e 94 bc 01 	call	0x378	; 0x378 <_Z14Set_PortB_Pinsh9Direction>
		break;
     54e:	ad c0       	rjmp	.+346    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_2B:
		this->port=PortB;
     550:	81 e0       	ldi	r24, 0x01	; 1
     552:	8c 93       	st	X, r24
		this->pin =2;
     554:	82 e0       	ldi	r24, 0x02	; 2
     556:	11 96       	adiw	r26, 0x01	; 1
     558:	8c 93       	st	X, r24
		Set_PortB_Pins(2,state);
     55a:	0e 94 bc 01 	call	0x378	; 0x378 <_Z14Set_PortB_Pinsh9Direction>
		break;
     55e:	a5 c0       	rjmp	.+330    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_3B:
		this->port=PortB;
     560:	81 e0       	ldi	r24, 0x01	; 1
     562:	8c 93       	st	X, r24
		this->pin =3;
     564:	83 e0       	ldi	r24, 0x03	; 3
     566:	11 96       	adiw	r26, 0x01	; 1
     568:	8c 93       	st	X, r24
		Set_PortB_Pins(3,state);
     56a:	0e 94 bc 01 	call	0x378	; 0x378 <_Z14Set_PortB_Pinsh9Direction>
		break;
     56e:	9d c0       	rjmp	.+314    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_4B:
		this->port=PortB;
     570:	81 e0       	ldi	r24, 0x01	; 1
     572:	8c 93       	st	X, r24
		this->pin =4;
     574:	84 e0       	ldi	r24, 0x04	; 4
     576:	11 96       	adiw	r26, 0x01	; 1
     578:	8c 93       	st	X, r24
		Set_PortB_Pins(4,state);
     57a:	0e 94 bc 01 	call	0x378	; 0x378 <_Z14Set_PortB_Pinsh9Direction>
		break;
     57e:	95 c0       	rjmp	.+298    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_5B:
		this->port=PortB;
     580:	81 e0       	ldi	r24, 0x01	; 1
     582:	8c 93       	st	X, r24
		this->pin =5;
     584:	85 e0       	ldi	r24, 0x05	; 5
     586:	11 96       	adiw	r26, 0x01	; 1
     588:	8c 93       	st	X, r24
		Set_PortB_Pins(5,state);
     58a:	0e 94 bc 01 	call	0x378	; 0x378 <_Z14Set_PortB_Pinsh9Direction>
		break;
     58e:	8d c0       	rjmp	.+282    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_6B:
		this->port=PortB;
     590:	81 e0       	ldi	r24, 0x01	; 1
     592:	8c 93       	st	X, r24
		this->pin =6;
     594:	86 e0       	ldi	r24, 0x06	; 6
     596:	11 96       	adiw	r26, 0x01	; 1
     598:	8c 93       	st	X, r24
		Set_PortB_Pins(6,state);
     59a:	0e 94 bc 01 	call	0x378	; 0x378 <_Z14Set_PortB_Pinsh9Direction>
		break;
     59e:	85 c0       	rjmp	.+266    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_7B:
		this->port=PortB;
     5a0:	81 e0       	ldi	r24, 0x01	; 1
     5a2:	8c 93       	st	X, r24
		this->pin =7;
     5a4:	87 e0       	ldi	r24, 0x07	; 7
     5a6:	11 96       	adiw	r26, 0x01	; 1
     5a8:	8c 93       	st	X, r24
		Set_PortB_Pins(7,state);
     5aa:	0e 94 bc 01 	call	0x378	; 0x378 <_Z14Set_PortB_Pinsh9Direction>
		break;
     5ae:	7d c0       	rjmp	.+250    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	    
	 	
/*************PORT-C***************/	   
	 case PIN_0C:
		this->port=PortC;
     5b0:	82 e0       	ldi	r24, 0x02	; 2
     5b2:	8c 93       	st	X, r24
		this->pin =0;
     5b4:	11 96       	adiw	r26, 0x01	; 1
     5b6:	1c 92       	st	X, r1
		Set_PortC_Pins(0,state);
     5b8:	80 e0       	ldi	r24, 0x00	; 0
     5ba:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z14Set_PortC_Pinsh9Direction>
		break;
     5be:	75 c0       	rjmp	.+234    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_1C:
		this->port=PortC;
     5c0:	82 e0       	ldi	r24, 0x02	; 2
     5c2:	8c 93       	st	X, r24
		this->pin =1;
     5c4:	81 e0       	ldi	r24, 0x01	; 1
     5c6:	11 96       	adiw	r26, 0x01	; 1
     5c8:	8c 93       	st	X, r24
		Set_PortC_Pins(1,state);
     5ca:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z14Set_PortC_Pinsh9Direction>
		break;
     5ce:	6d c0       	rjmp	.+218    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_2C:
		this->port=PortC;
     5d0:	82 e0       	ldi	r24, 0x02	; 2
     5d2:	8c 93       	st	X, r24
		this->pin =2;
     5d4:	11 96       	adiw	r26, 0x01	; 1
     5d6:	8c 93       	st	X, r24
		Set_PortC_Pins(2,state);
     5d8:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z14Set_PortC_Pinsh9Direction>
		break;
     5dc:	66 c0       	rjmp	.+204    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_3C:
		this->port=PortC;
     5de:	82 e0       	ldi	r24, 0x02	; 2
     5e0:	8c 93       	st	X, r24
		this->pin =3;
     5e2:	83 e0       	ldi	r24, 0x03	; 3
     5e4:	11 96       	adiw	r26, 0x01	; 1
     5e6:	8c 93       	st	X, r24
		Set_PortC_Pins(3,state);
     5e8:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z14Set_PortC_Pinsh9Direction>
		break;
     5ec:	5e c0       	rjmp	.+188    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_4C:
		this->port=PortC;
     5ee:	82 e0       	ldi	r24, 0x02	; 2
     5f0:	8c 93       	st	X, r24
		this->pin =4;
     5f2:	84 e0       	ldi	r24, 0x04	; 4
     5f4:	11 96       	adiw	r26, 0x01	; 1
     5f6:	8c 93       	st	X, r24
		Set_PortC_Pins(4,state);
     5f8:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z14Set_PortC_Pinsh9Direction>
		break;
     5fc:	56 c0       	rjmp	.+172    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_5C:
		this->port=PortC;
     5fe:	82 e0       	ldi	r24, 0x02	; 2
     600:	8c 93       	st	X, r24
		this->pin =5;
     602:	85 e0       	ldi	r24, 0x05	; 5
     604:	11 96       	adiw	r26, 0x01	; 1
     606:	8c 93       	st	X, r24
		Set_PortC_Pins(5,state);
     608:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z14Set_PortC_Pinsh9Direction>
		break;
     60c:	4e c0       	rjmp	.+156    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_6C:
		this->port=PortC;
     60e:	82 e0       	ldi	r24, 0x02	; 2
     610:	8c 93       	st	X, r24
		this->pin =6;
     612:	86 e0       	ldi	r24, 0x06	; 6
     614:	11 96       	adiw	r26, 0x01	; 1
     616:	8c 93       	st	X, r24
		Set_PortC_Pins(6,state);
     618:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z14Set_PortC_Pinsh9Direction>
		break;
     61c:	46 c0       	rjmp	.+140    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_7C:
		this->port=PortC;
     61e:	82 e0       	ldi	r24, 0x02	; 2
     620:	8c 93       	st	X, r24
		this->pin =7;
     622:	87 e0       	ldi	r24, 0x07	; 7
     624:	11 96       	adiw	r26, 0x01	; 1
     626:	8c 93       	st	X, r24
		Set_PortC_Pins(7,state);
     628:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z14Set_PortC_Pinsh9Direction>
		break;
     62c:	3e c0       	rjmp	.+124    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 	
/*************PORT-D***************/	   
	 case PIN_0D:
		this->port=PortD;
     62e:	83 e0       	ldi	r24, 0x03	; 3
     630:	8c 93       	st	X, r24
		this->pin =0;
     632:	11 96       	adiw	r26, 0x01	; 1
     634:	1c 92       	st	X, r1
		Set_PortD_Pins(0,state);
     636:	80 e0       	ldi	r24, 0x00	; 0
     638:	0e 94 20 02 	call	0x440	; 0x440 <_Z14Set_PortD_Pinsh9Direction>
		break;
     63c:	36 c0       	rjmp	.+108    	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_1D:
		this->port=PortD;
     63e:	83 e0       	ldi	r24, 0x03	; 3
     640:	8c 93       	st	X, r24
		this->pin =1;
     642:	81 e0       	ldi	r24, 0x01	; 1
     644:	11 96       	adiw	r26, 0x01	; 1
     646:	8c 93       	st	X, r24
		Set_PortD_Pins(1,state);
     648:	0e 94 20 02 	call	0x440	; 0x440 <_Z14Set_PortD_Pinsh9Direction>
		break;
     64c:	2e c0       	rjmp	.+92     	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_2D:
		this->port=PortD;
     64e:	83 e0       	ldi	r24, 0x03	; 3
     650:	8c 93       	st	X, r24
		this->pin =2;
     652:	82 e0       	ldi	r24, 0x02	; 2
     654:	11 96       	adiw	r26, 0x01	; 1
     656:	8c 93       	st	X, r24
		Set_PortD_Pins(2,state);
     658:	0e 94 20 02 	call	0x440	; 0x440 <_Z14Set_PortD_Pinsh9Direction>
		break;
     65c:	26 c0       	rjmp	.+76     	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_3D:
		this->port=PortD;
     65e:	83 e0       	ldi	r24, 0x03	; 3
     660:	8c 93       	st	X, r24
		this->pin =3;
     662:	11 96       	adiw	r26, 0x01	; 1
     664:	8c 93       	st	X, r24
		Set_PortD_Pins(3,state);
     666:	0e 94 20 02 	call	0x440	; 0x440 <_Z14Set_PortD_Pinsh9Direction>
		break;
     66a:	1f c0       	rjmp	.+62     	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_4D:
		this->port=PortD;
     66c:	83 e0       	ldi	r24, 0x03	; 3
     66e:	8c 93       	st	X, r24
		this->pin =4;
     670:	84 e0       	ldi	r24, 0x04	; 4
     672:	11 96       	adiw	r26, 0x01	; 1
     674:	8c 93       	st	X, r24
		Set_PortD_Pins(4,state);
     676:	0e 94 20 02 	call	0x440	; 0x440 <_Z14Set_PortD_Pinsh9Direction>
		break;
     67a:	17 c0       	rjmp	.+46     	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_5D:
		this->port=PortD;
     67c:	83 e0       	ldi	r24, 0x03	; 3
     67e:	8c 93       	st	X, r24
		this->pin =5;
     680:	85 e0       	ldi	r24, 0x05	; 5
     682:	11 96       	adiw	r26, 0x01	; 1
     684:	8c 93       	st	X, r24
		Set_PortD_Pins(5,state);
     686:	0e 94 20 02 	call	0x440	; 0x440 <_Z14Set_PortD_Pinsh9Direction>
		break;
     68a:	0f c0       	rjmp	.+30     	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_6D:
		this->port=PortD;
     68c:	83 e0       	ldi	r24, 0x03	; 3
     68e:	8c 93       	st	X, r24
		this->pin =6;
     690:	86 e0       	ldi	r24, 0x06	; 6
     692:	11 96       	adiw	r26, 0x01	; 1
     694:	8c 93       	st	X, r24
		Set_PortD_Pins(6,state);
     696:	0e 94 20 02 	call	0x440	; 0x440 <_Z14Set_PortD_Pinsh9Direction>
		break;
     69a:	07 c0       	rjmp	.+14     	; 0x6aa <_ZN3PIN12DIO_Init_PinE5PinID9Direction+0x206>
	 case PIN_7D:
		this->port=PortD;
     69c:	83 e0       	ldi	r24, 0x03	; 3
     69e:	8c 93       	st	X, r24
		this->pin =7;
     6a0:	87 e0       	ldi	r24, 0x07	; 7
     6a2:	11 96       	adiw	r26, 0x01	; 1
     6a4:	8c 93       	st	X, r24
		Set_PortD_Pins(7,state);
     6a6:	0e 94 20 02 	call	0x440	; 0x440 <_Z14Set_PortD_Pinsh9Direction>
		break;
	      	   
	   
   }
	
}
     6aa:	1f 91       	pop	r17
     6ac:	0f 91       	pop	r16
     6ae:	08 95       	ret

000006b0 <_ZN3LCD8LCD_cmndEh>:
	if (row == 0 && pos<16)
	LCD_cmnd((pos & 0x0F)|0x80);	    /* Command of first row and required position<16 */
	else if (row == 1 && pos<16)
	LCD_cmnd((pos & 0x0F)|0xC0);   	/* Command of first row and required position<16 */
	LCD_String(length ,str);	              	/* Call LCD string function */
}
     6b0:	1f 93       	push	r17
     6b2:	cf 93       	push	r28
     6b4:	df 93       	push	r29
     6b6:	ec 01       	movw	r28, r24
     6b8:	16 2f       	mov	r17, r22
     6ba:	02 96       	adiw	r24, 0x02	; 2
     6bc:	0e 94 27 01 	call	0x24e	; 0x24e <_ZN3PIN11DIO_CLR_PinEv>
     6c0:	ce 01       	movw	r24, r28
     6c2:	05 96       	adiw	r24, 0x05	; 5
     6c4:	0e 94 27 01 	call	0x24e	; 0x24e <_ZN3PIN11DIO_CLR_PinEv>
     6c8:	61 2f       	mov	r22, r17
     6ca:	ce 01       	movw	r24, r28
     6cc:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN4PORT14DIO_Write_PortEh>
     6d0:	28 96       	adiw	r28, 0x08	; 8
     6d2:	ce 01       	movw	r24, r28
     6d4:	0e 94 ed 00 	call	0x1da	; 0x1da <_ZN3PIN11DIO_SET_PinEv>
     6d8:	8f ec       	ldi	r24, 0xCF	; 207
     6da:	97 e0       	ldi	r25, 0x07	; 7
     6dc:	01 97       	sbiw	r24, 0x01	; 1
     6de:	f1 f7       	brne	.-4      	; 0x6dc <_ZN3LCD8LCD_cmndEh+0x2c>
     6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <_ZN3LCD8LCD_cmndEh+0x32>
     6e2:	00 00       	nop
     6e4:	ce 01       	movw	r24, r28
     6e6:	0e 94 27 01 	call	0x24e	; 0x24e <_ZN3PIN11DIO_CLR_PinEv>
     6ea:	df 91       	pop	r29
     6ec:	cf 91       	pop	r28
     6ee:	1f 91       	pop	r17
     6f0:	08 95       	ret

000006f2 <_ZN3LCD8LCD_InitEv>:
     6f2:	cf 93       	push	r28
     6f4:	df 93       	push	r29
     6f6:	ec 01       	movw	r28, r24
     6f8:	4f ef       	ldi	r20, 0xFF	; 255
     6fa:	62 e0       	ldi	r22, 0x02	; 2
     6fc:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN4PORT13DIO_Init_PortE6PortIDh>
     700:	42 e0       	ldi	r20, 0x02	; 2
     702:	68 e1       	ldi	r22, 0x18	; 24
     704:	ce 01       	movw	r24, r28
     706:	02 96       	adiw	r24, 0x02	; 2
     708:	0e 94 52 02 	call	0x4a4	; 0x4a4 <_ZN3PIN12DIO_Init_PinE5PinID9Direction>
     70c:	42 e0       	ldi	r20, 0x02	; 2
     70e:	69 e1       	ldi	r22, 0x19	; 25
     710:	ce 01       	movw	r24, r28
     712:	05 96       	adiw	r24, 0x05	; 5
     714:	0e 94 52 02 	call	0x4a4	; 0x4a4 <_ZN3PIN12DIO_Init_PinE5PinID9Direction>
     718:	42 e0       	ldi	r20, 0x02	; 2
     71a:	6a e1       	ldi	r22, 0x1A	; 26
     71c:	ce 01       	movw	r24, r28
     71e:	08 96       	adiw	r24, 0x08	; 8
     720:	0e 94 52 02 	call	0x4a4	; 0x4a4 <_ZN3PIN12DIO_Init_PinE5PinID9Direction>
     724:	2f ef       	ldi	r18, 0xFF	; 255
     726:	89 ef       	ldi	r24, 0xF9	; 249
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	21 50       	subi	r18, 0x01	; 1
     72c:	80 40       	sbci	r24, 0x00	; 0
     72e:	90 40       	sbci	r25, 0x00	; 0
     730:	e1 f7       	brne	.-8      	; 0x72a <_ZN3LCD8LCD_InitEv+0x38>
     732:	00 c0       	rjmp	.+0      	; 0x734 <_ZN3LCD8LCD_InitEv+0x42>
     734:	00 00       	nop
     736:	68 e3       	ldi	r22, 0x38	; 56
     738:	ce 01       	movw	r24, r28
     73a:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_ZN3LCD8LCD_cmndEh>
     73e:	2a e6       	ldi	r18, 0x6A	; 106
     740:	2a 95       	dec	r18
     742:	f1 f7       	brne	.-4      	; 0x740 <_ZN3LCD8LCD_InitEv+0x4e>
     744:	00 c0       	rjmp	.+0      	; 0x746 <_ZN3LCD8LCD_InitEv+0x54>
     746:	6c e0       	ldi	r22, 0x0C	; 12
     748:	ce 01       	movw	r24, r28
     74a:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_ZN3LCD8LCD_cmndEh>
     74e:	8a e6       	ldi	r24, 0x6A	; 106
     750:	8a 95       	dec	r24
     752:	f1 f7       	brne	.-4      	; 0x750 <_ZN3LCD8LCD_InitEv+0x5e>
     754:	00 c0       	rjmp	.+0      	; 0x756 <_ZN3LCD8LCD_InitEv+0x64>
     756:	61 e0       	ldi	r22, 0x01	; 1
     758:	ce 01       	movw	r24, r28
     75a:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_ZN3LCD8LCD_cmndEh>
     75e:	8f e9       	ldi	r24, 0x9F	; 159
     760:	9f e0       	ldi	r25, 0x0F	; 15
     762:	01 97       	sbiw	r24, 0x01	; 1
     764:	f1 f7       	brne	.-4      	; 0x762 <_ZN3LCD8LCD_InitEv+0x70>
     766:	00 c0       	rjmp	.+0      	; 0x768 <_ZN3LCD8LCD_InitEv+0x76>
     768:	00 00       	nop
     76a:	66 e0       	ldi	r22, 0x06	; 6
     76c:	ce 01       	movw	r24, r28
     76e:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_ZN3LCD8LCD_cmndEh>
     772:	df 91       	pop	r29
     774:	cf 91       	pop	r28
     776:	08 95       	ret

00000778 <_ZN3LCDC1Ev>:
     778:	cf 93       	push	r28
     77a:	df 93       	push	r29
     77c:	ec 01       	movw	r28, r24
     77e:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <_ZN4PORTC1Ev>
     782:	ce 01       	movw	r24, r28
     784:	02 96       	adiw	r24, 0x02	; 2
     786:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_ZN3PINC1Ev>
     78a:	ce 01       	movw	r24, r28
     78c:	05 96       	adiw	r24, 0x05	; 5
     78e:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_ZN3PINC1Ev>
     792:	ce 01       	movw	r24, r28
     794:	08 96       	adiw	r24, 0x08	; 8
     796:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_ZN3PINC1Ev>
     79a:	ce 01       	movw	r24, r28
     79c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <_ZN3LCD8LCD_InitEv>
     7a0:	df 91       	pop	r29
     7a2:	cf 91       	pop	r28
     7a4:	08 95       	ret

000007a6 <_ZN3LCD9LCD_writeEh>:
     7a6:	1f 93       	push	r17
     7a8:	cf 93       	push	r28
     7aa:	df 93       	push	r29
     7ac:	ec 01       	movw	r28, r24
     7ae:	16 2f       	mov	r17, r22
     7b0:	02 96       	adiw	r24, 0x02	; 2
     7b2:	0e 94 ed 00 	call	0x1da	; 0x1da <_ZN3PIN11DIO_SET_PinEv>
     7b6:	ce 01       	movw	r24, r28
     7b8:	05 96       	adiw	r24, 0x05	; 5
     7ba:	0e 94 27 01 	call	0x24e	; 0x24e <_ZN3PIN11DIO_CLR_PinEv>
     7be:	61 2f       	mov	r22, r17
     7c0:	ce 01       	movw	r24, r28
     7c2:	0e 94 78 01 	call	0x2f0	; 0x2f0 <_ZN4PORT14DIO_Write_PortEh>
     7c6:	28 96       	adiw	r28, 0x08	; 8
     7c8:	ce 01       	movw	r24, r28
     7ca:	0e 94 ed 00 	call	0x1da	; 0x1da <_ZN3PIN11DIO_SET_PinEv>
     7ce:	8f ec       	ldi	r24, 0xCF	; 207
     7d0:	97 e0       	ldi	r25, 0x07	; 7
     7d2:	01 97       	sbiw	r24, 0x01	; 1
     7d4:	f1 f7       	brne	.-4      	; 0x7d2 <_ZN3LCD9LCD_writeEh+0x2c>
     7d6:	00 c0       	rjmp	.+0      	; 0x7d8 <_ZN3LCD9LCD_writeEh+0x32>
     7d8:	00 00       	nop
     7da:	ce 01       	movw	r24, r28
     7dc:	0e 94 27 01 	call	0x24e	; 0x24e <_ZN3PIN11DIO_CLR_PinEv>
     7e0:	df 91       	pop	r29
     7e2:	cf 91       	pop	r28
     7e4:	1f 91       	pop	r17
     7e6:	08 95       	ret

000007e8 <_ZN3LCD10LCD_StringEhPc>:
     7e8:	ef 92       	push	r14
     7ea:	ff 92       	push	r15
     7ec:	0f 93       	push	r16
     7ee:	1f 93       	push	r17
     7f0:	cf 93       	push	r28
     7f2:	df 93       	push	r29
     7f4:	7c 01       	movw	r14, r24
     7f6:	d6 2f       	mov	r29, r22
     7f8:	8a 01       	movw	r16, r20
     7fa:	c0 e0       	ldi	r28, 0x00	; 0
     7fc:	cd 17       	cp	r28, r29
     7fe:	48 f4       	brcc	.+18     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     800:	f8 01       	movw	r30, r16
     802:	ec 0f       	add	r30, r28
     804:	f1 1d       	adc	r31, r1
     806:	60 81       	ld	r22, Z
     808:	c7 01       	movw	r24, r14
     80a:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <_ZN3LCD9LCD_writeEh>
     80e:	cf 5f       	subi	r28, 0xFF	; 255
     810:	f5 cf       	rjmp	.-22     	; 0x7fc <_ZN3LCD10LCD_StringEhPc+0x14>
     812:	df 91       	pop	r29
     814:	cf 91       	pop	r28
     816:	1f 91       	pop	r17
     818:	0f 91       	pop	r16
     81a:	ff 90       	pop	r15
     81c:	ef 90       	pop	r14
     81e:	08 95       	ret

00000820 <_ZN3LCD9LCD_ClearEv>:
     820:	cf 93       	push	r28
     822:	df 93       	push	r29
     824:	ec 01       	movw	r28, r24
     826:	61 e0       	ldi	r22, 0x01	; 1
     828:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_ZN3LCD8LCD_cmndEh>
     82c:	62 e0       	ldi	r22, 0x02	; 2
     82e:	ce 01       	movw	r24, r28
     830:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_ZN3LCD8LCD_cmndEh>
     834:	df 91       	pop	r29
     836:	cf 91       	pop	r28
     838:	08 95       	ret

0000083a <_ZN3LCD14LCD_Cursor_posEhh>:

void LCD::LCD_Cursor_pos(u8 row , u8 col)
{
	if (row == 0 && col<16)
     83a:	61 11       	cpse	r22, r1
     83c:	08 c0       	rjmp	.+16     	; 0x84e <_ZN3LCD14LCD_Cursor_posEhh+0x14>
     83e:	40 31       	cpi	r20, 0x10	; 16
     840:	30 f4       	brcc	.+12     	; 0x84e <_ZN3LCD14LCD_Cursor_posEhh+0x14>
	LCD_cmnd((col & 0x0F)|0x80);	    /* Command of first row and required position<16 */
     842:	4f 70       	andi	r20, 0x0F	; 15
     844:	64 2f       	mov	r22, r20
     846:	60 68       	ori	r22, 0x80	; 128
     848:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_ZN3LCD8LCD_cmndEh>
     84c:	08 95       	ret
	else if (row == 1 && col<16)
     84e:	61 30       	cpi	r22, 0x01	; 1
     850:	39 f4       	brne	.+14     	; 0x860 <__stack+0x1>
     852:	40 31       	cpi	r20, 0x10	; 16
     854:	28 f4       	brcc	.+10     	; 0x860 <__stack+0x1>
	LCD_cmnd((col & 0x0F)|0xC0);   	     /* Command of first row and required position<16 */
     856:	4f 70       	andi	r20, 0x0F	; 15
     858:	64 2f       	mov	r22, r20
     85a:	60 6c       	ori	r22, 0xC0	; 192
     85c:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_ZN3LCD8LCD_cmndEh>
     860:	08 95       	ret

00000862 <_ZN3LED7LED_OFFEv>:
	led.DIO_Init_Pin(pin,OUT);
	LED_OFF();
} //LED

void LED::LED_OFF()
{
     862:	cf 93       	push	r28
     864:	df 93       	push	r29
     866:	ec 01       	movw	r28, r24
	led.DIO_CLR_Pin();
     868:	01 96       	adiw	r24, 0x01	; 1
     86a:	0e 94 27 01 	call	0x24e	; 0x24e <_ZN3PIN11DIO_CLR_PinEv>
	status = OFF;
     86e:	18 82       	st	Y, r1
}
     870:	df 91       	pop	r29
     872:	cf 91       	pop	r28
     874:	08 95       	ret

00000876 <_ZN3LEDC1E5PinID>:


#include "LED.h"


LED::LED(PinID pin)
     876:	ff 92       	push	r15
     878:	0f 93       	push	r16
     87a:	1f 93       	push	r17
     87c:	cf 93       	push	r28
     87e:	df 93       	push	r29
     880:	ec 01       	movw	r28, r24
     882:	f6 2e       	mov	r15, r22
     884:	8c 01       	movw	r16, r24
     886:	0f 5f       	subi	r16, 0xFF	; 255
     888:	1f 4f       	sbci	r17, 0xFF	; 255
     88a:	c8 01       	movw	r24, r16
     88c:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_ZN3PINC1Ev>
{
	led.DIO_Init_Pin(pin,OUT);
     890:	42 e0       	ldi	r20, 0x02	; 2
     892:	6f 2d       	mov	r22, r15
     894:	c8 01       	movw	r24, r16
     896:	0e 94 52 02 	call	0x4a4	; 0x4a4 <_ZN3PIN12DIO_Init_PinE5PinID9Direction>
	LED_OFF();
     89a:	ce 01       	movw	r24, r28
     89c:	0e 94 31 04 	call	0x862	; 0x862 <_ZN3LED7LED_OFFEv>
} //LED
     8a0:	df 91       	pop	r29
     8a2:	cf 91       	pop	r28
     8a4:	1f 91       	pop	r17
     8a6:	0f 91       	pop	r16
     8a8:	ff 90       	pop	r15
     8aa:	08 95       	ret

000008ac <_ZN3LED6LED_ONEv>:
	led.DIO_CLR_Pin();
	status = OFF;
}

void LED::LED_ON()
{
     8ac:	cf 93       	push	r28
     8ae:	df 93       	push	r29
     8b0:	ec 01       	movw	r28, r24
	led.DIO_SET_Pin();
     8b2:	01 96       	adiw	r24, 0x01	; 1
     8b4:	0e 94 ed 00 	call	0x1da	; 0x1da <_ZN3PIN11DIO_SET_PinEv>
	status = ON;
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	88 83       	st	Y, r24
}
     8bc:	df 91       	pop	r29
     8be:	cf 91       	pop	r28
     8c0:	08 95       	ret

000008c2 <_Z41__static_initialization_and_destruction_0ii>:
		lcd1.LCD_Cursor_pos(1,0);
		lcd1.LCD_String(6,"Fan = ");
		lcd1.LCD_String(4,speed_buffer);
		lcd1.LCD_String(2,"%");
		_delay_ms(100);
     8c2:	01 97       	sbiw	r24, 0x01	; 1
     8c4:	39 f4       	brne	.+14     	; 0x8d4 <_Z41__static_initialization_and_destruction_0ii+0x12>
     8c6:	6f 3f       	cpi	r22, 0xFF	; 255
     8c8:	7f 4f       	sbci	r23, 0xFF	; 255
     8ca:	21 f4       	brne	.+8      	; 0x8d4 <_Z41__static_initialization_and_destruction_0ii+0x12>
/*Global Variables*/
  u16 digital_read=0;
  f32  analog_read=0;
  f32   temprature=0;
  
  LCD lcd1;
     8cc:	82 e8       	ldi	r24, 0x82	; 130
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	0e 94 bc 03 	call	0x778	; 0x778 <_ZN3LCDC1Ev>
     8d4:	08 95       	ret

000008d6 <_Z7Displayv>:
	
}

void Display()
{
		itoa((u32)temprature, temp_buffer, 10);
     8d6:	60 91 8d 00 	lds	r22, 0x008D	; 0x80008d <temprature>
     8da:	70 91 8e 00 	lds	r23, 0x008E	; 0x80008e <temprature+0x1>
     8de:	80 91 8f 00 	lds	r24, 0x008F	; 0x80008f <temprature+0x2>
     8e2:	90 91 90 00 	lds	r25, 0x0090	; 0x800090 <temprature+0x3>
     8e6:	0e 94 f7 06 	call	0xdee	; 0xdee <__fixunssfsi>
     8ea:	dc 01       	movw	r26, r24
     8ec:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     8ee:	4a e0       	ldi	r20, 0x0A	; 10
     8f0:	6b e7       	ldi	r22, 0x7B	; 123
     8f2:	70 e0       	ldi	r23, 0x00	; 0
     8f4:	0e 94 50 08 	call	0x10a0	; 0x10a0 <__itoa_ncheck>
		itoa((u32)fan_duty, speed_buffer, 10);
     8f8:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     8fc:	4a e0       	ldi	r20, 0x0A	; 10
     8fe:	64 e7       	ldi	r22, 0x74	; 116
     900:	70 e0       	ldi	r23, 0x00	; 0
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	0e 94 50 08 	call	0x10a0	; 0x10a0 <__itoa_ncheck>
		
		lcd1.LCD_Cursor_pos(0,0);
     908:	40 e0       	ldi	r20, 0x00	; 0
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	82 e8       	ldi	r24, 0x82	; 130
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	0e 94 1d 04 	call	0x83a	; 0x83a <_ZN3LCD14LCD_Cursor_posEhh>
		lcd1.LCD_String(7,"Temp = ");
     914:	41 e6       	ldi	r20, 0x61	; 97
     916:	50 e0       	ldi	r21, 0x00	; 0
     918:	67 e0       	ldi	r22, 0x07	; 7
     91a:	82 e8       	ldi	r24, 0x82	; 130
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <_ZN3LCD10LCD_StringEhPc>
		lcd1.LCD_String(3,temp_buffer);
     922:	4b e7       	ldi	r20, 0x7B	; 123
     924:	50 e0       	ldi	r21, 0x00	; 0
     926:	63 e0       	ldi	r22, 0x03	; 3
     928:	82 e8       	ldi	r24, 0x82	; 130
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <_ZN3LCD10LCD_StringEhPc>
		lcd1.LCD_String(2,"C");
     930:	49 e6       	ldi	r20, 0x69	; 105
     932:	50 e0       	ldi	r21, 0x00	; 0
     934:	62 e0       	ldi	r22, 0x02	; 2
     936:	82 e8       	ldi	r24, 0x82	; 130
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <_ZN3LCD10LCD_StringEhPc>
		
		lcd1.LCD_Cursor_pos(1,0);
     93e:	40 e0       	ldi	r20, 0x00	; 0
     940:	61 e0       	ldi	r22, 0x01	; 1
     942:	82 e8       	ldi	r24, 0x82	; 130
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	0e 94 1d 04 	call	0x83a	; 0x83a <_ZN3LCD14LCD_Cursor_posEhh>
		lcd1.LCD_String(6,"Fan = ");
     94a:	4b e6       	ldi	r20, 0x6B	; 107
     94c:	50 e0       	ldi	r21, 0x00	; 0
     94e:	66 e0       	ldi	r22, 0x06	; 6
     950:	82 e8       	ldi	r24, 0x82	; 130
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <_ZN3LCD10LCD_StringEhPc>
		lcd1.LCD_String(4,speed_buffer);
     958:	44 e7       	ldi	r20, 0x74	; 116
     95a:	50 e0       	ldi	r21, 0x00	; 0
     95c:	64 e0       	ldi	r22, 0x04	; 4
     95e:	82 e8       	ldi	r24, 0x82	; 130
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <_ZN3LCD10LCD_StringEhPc>
		lcd1.LCD_String(2,"%");
     966:	42 e7       	ldi	r20, 0x72	; 114
     968:	50 e0       	ldi	r21, 0x00	; 0
     96a:	62 e0       	ldi	r22, 0x02	; 2
     96c:	82 e8       	ldi	r24, 0x82	; 130
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <_ZN3LCD10LCD_StringEhPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     974:	2f ef       	ldi	r18, 0xFF	; 255
     976:	80 e7       	ldi	r24, 0x70	; 112
     978:	92 e0       	ldi	r25, 0x02	; 2
     97a:	21 50       	subi	r18, 0x01	; 1
     97c:	80 40       	sbci	r24, 0x00	; 0
     97e:	90 40       	sbci	r25, 0x00	; 0
     980:	e1 f7       	brne	.-8      	; 0x97a <_Z7Displayv+0xa4>
     982:	00 c0       	rjmp	.+0      	; 0x984 <_Z7Displayv+0xae>
     984:	00 00       	nop
     986:	08 95       	ret

00000988 <main>:
  char speed_buffer[7];
/*Local Functions Prototype*/  
void Display();

int main(void)
{
     988:	cf 93       	push	r28
     98a:	df 93       	push	r29
     98c:	cd b7       	in	r28, 0x3d	; 61
     98e:	de b7       	in	r29, 0x3e	; 62
     990:	66 97       	sbiw	r28, 0x16	; 22
     992:	0f b6       	in	r0, 0x3f	; 63
     994:	f8 94       	cli
     996:	de bf       	out	0x3e, r29	; 62
     998:	0f be       	out	0x3f, r0	; 63
     99a:	cd bf       	out	0x3d, r28	; 61
	 
	ADC_INPUT temp_sensor(ADC0);
     99c:	60 e0       	ldi	r22, 0x00	; 0
     99e:	ce 01       	movw	r24, r28
     9a0:	01 96       	adiw	r24, 0x01	; 1
     9a2:	0e 94 7e 00 	call	0xfc	; 0xfc <_ZN9ADC_INPUTC1E11ADC_Channel>
	DC_MOTOR fan;
     9a6:	ce 01       	movw	r24, r28
     9a8:	02 96       	adiw	r24, 0x02	; 2
     9aa:	0e 94 94 00 	call	0x128	; 0x128 <_ZN8DC_MOTORC1Ev>
	fan.Motor_Duty(50);
     9ae:	62 e3       	ldi	r22, 0x32	; 50
     9b0:	ce 01       	movw	r24, r28
     9b2:	02 96       	adiw	r24, 0x02	; 2
     9b4:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_ZN8DC_MOTOR10Motor_DutyEh>
	fan.Motor_RUN();
     9b8:	ce 01       	movw	r24, r28
     9ba:	02 96       	adiw	r24, 0x02	; 2
     9bc:	0e 94 c6 00 	call	0x18c	; 0x18c <_ZN8DC_MOTOR9Motor_RUNEv>

	LED green_led(PIN_2B);
     9c0:	6a e0       	ldi	r22, 0x0A	; 10
     9c2:	ce 01       	movw	r24, r28
     9c4:	0b 96       	adiw	r24, 0x0b	; 11
     9c6:	0e 94 3b 04 	call	0x876	; 0x876 <_ZN3LEDC1E5PinID>
	LED yellow_led(PIN_1B);
     9ca:	69 e0       	ldi	r22, 0x09	; 9
     9cc:	ce 01       	movw	r24, r28
     9ce:	0f 96       	adiw	r24, 0x0f	; 15
     9d0:	0e 94 3b 04 	call	0x876	; 0x876 <_ZN3LEDC1E5PinID>
	LED red_led(PIN_0B);
     9d4:	68 e0       	ldi	r22, 0x08	; 8
     9d6:	ce 01       	movw	r24, r28
     9d8:	43 96       	adiw	r24, 0x13	; 19
     9da:	0e 94 3b 04 	call	0x876	; 0x876 <_ZN3LEDC1E5PinID>
	
	
	
    while (1) 
    {		
		digital_read = temp_sensor.ADC_ChannelRead();
     9de:	ce 01       	movw	r24, r28
     9e0:	01 96       	adiw	r24, 0x01	; 1
     9e2:	0e 94 83 00 	call	0x106	; 0x106 <_ZN9ADC_INPUT15ADC_ChannelReadEv>
     9e6:	90 93 96 00 	sts	0x0096, r25	; 0x800096 <digital_read+0x1>
     9ea:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <digital_read>
		analog_read = digital_read *4.88;
     9ee:	bc 01       	movw	r22, r24
     9f0:	80 e0       	ldi	r24, 0x00	; 0
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	0e 94 26 07 	call	0xe4c	; 0xe4c <__floatunsisf>
     9f8:	26 ef       	ldi	r18, 0xF6	; 246
     9fa:	38 e2       	ldi	r19, 0x28	; 40
     9fc:	4c e9       	ldi	r20, 0x9C	; 156
     9fe:	50 e4       	ldi	r21, 0x40	; 64
     a00:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     a04:	60 93 91 00 	sts	0x0091, r22	; 0x800091 <analog_read>
     a08:	70 93 92 00 	sts	0x0092, r23	; 0x800092 <analog_read+0x1>
     a0c:	80 93 93 00 	sts	0x0093, r24	; 0x800093 <analog_read+0x2>
     a10:	90 93 94 00 	sts	0x0094, r25	; 0x800094 <analog_read+0x3>
		temprature  = (analog_read/10);
     a14:	20 e0       	ldi	r18, 0x00	; 0
     a16:	30 e0       	ldi	r19, 0x00	; 0
     a18:	40 e2       	ldi	r20, 0x20	; 32
     a1a:	51 e4       	ldi	r21, 0x41	; 65
     a1c:	0e 94 85 06 	call	0xd0a	; 0xd0a <__divsf3>
     a20:	6b 01       	movw	r12, r22
     a22:	7c 01       	movw	r14, r24
     a24:	60 93 8d 00 	sts	0x008D, r22	; 0x80008d <temprature>
     a28:	70 93 8e 00 	sts	0x008E, r23	; 0x80008e <temprature+0x1>
     a2c:	80 93 8f 00 	sts	0x008F, r24	; 0x80008f <temprature+0x2>
     a30:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <temprature+0x3>
		
		if (temprature<20)
     a34:	20 e0       	ldi	r18, 0x00	; 0
     a36:	30 e0       	ldi	r19, 0x00	; 0
     a38:	40 ea       	ldi	r20, 0xA0	; 160
     a3a:	51 e4       	ldi	r21, 0x41	; 65
     a3c:	0e 94 80 06 	call	0xd00	; 0xd00 <__cmpsf2>
     a40:	88 23       	and	r24, r24
     a42:	fc f4       	brge	.+62     	; 0xa82 <main+0xfa>
		{
            green_led.LED_ON();
     a44:	ce 01       	movw	r24, r28
     a46:	0b 96       	adiw	r24, 0x0b	; 11
     a48:	0e 94 56 04 	call	0x8ac	; 0x8ac <_ZN3LED6LED_ONEv>
			yellow_led.LED_OFF();
     a4c:	ce 01       	movw	r24, r28
     a4e:	0f 96       	adiw	r24, 0x0f	; 15
     a50:	0e 94 31 04 	call	0x862	; 0x862 <_ZN3LED7LED_OFFEv>
			red_led.LED_OFF();	
     a54:	ce 01       	movw	r24, r28
     a56:	43 96       	adiw	r24, 0x13	; 19
     a58:	0e 94 31 04 	call	0x862	; 0x862 <_ZN3LED7LED_OFFEv>
			fan_duty =50;
     a5c:	82 e3       	ldi	r24, 0x32	; 50
     a5e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
			lcd1.LCD_Clear();
     a62:	82 e8       	ldi	r24, 0x82	; 130
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	0e 94 10 04 	call	0x820	; 0x820 <_ZN3LCD9LCD_ClearEv>
			Display();		
     a6a:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <_Z7Displayv>
     a6e:	2f ef       	ldi	r18, 0xFF	; 255
     a70:	80 e7       	ldi	r24, 0x70	; 112
     a72:	92 e0       	ldi	r25, 0x02	; 2
     a74:	21 50       	subi	r18, 0x01	; 1
     a76:	80 40       	sbci	r24, 0x00	; 0
     a78:	90 40       	sbci	r25, 0x00	; 0
     a7a:	e1 f7       	brne	.-8      	; 0xa74 <main+0xec>
     a7c:	00 c0       	rjmp	.+0      	; 0xa7e <main+0xf6>
     a7e:	00 00       	nop
     a80:	ae cf       	rjmp	.-164    	; 0x9de <main+0x56>
			_delay_ms(100);
			
		} 
		else if (temprature>=20 && temprature<30)
     a82:	20 e0       	ldi	r18, 0x00	; 0
     a84:	30 e0       	ldi	r19, 0x00	; 0
     a86:	40 ea       	ldi	r20, 0xA0	; 160
     a88:	51 e4       	ldi	r21, 0x41	; 65
     a8a:	c7 01       	movw	r24, r14
     a8c:	b6 01       	movw	r22, r12
     a8e:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__gesf2>
     a92:	88 23       	and	r24, r24
     a94:	74 f1       	brlt	.+92     	; 0xaf2 <main+0x16a>
     a96:	20 e0       	ldi	r18, 0x00	; 0
     a98:	30 e0       	ldi	r19, 0x00	; 0
     a9a:	40 ef       	ldi	r20, 0xF0	; 240
     a9c:	51 e4       	ldi	r21, 0x41	; 65
     a9e:	c7 01       	movw	r24, r14
     aa0:	b6 01       	movw	r22, r12
     aa2:	0e 94 80 06 	call	0xd00	; 0xd00 <__cmpsf2>
     aa6:	88 23       	and	r24, r24
     aa8:	24 f5       	brge	.+72     	; 0xaf2 <main+0x16a>
		{
			green_led.LED_ON();
     aaa:	ce 01       	movw	r24, r28
     aac:	0b 96       	adiw	r24, 0x0b	; 11
     aae:	0e 94 56 04 	call	0x8ac	; 0x8ac <_ZN3LED6LED_ONEv>
			yellow_led.LED_ON();
     ab2:	ce 01       	movw	r24, r28
     ab4:	0f 96       	adiw	r24, 0x0f	; 15
     ab6:	0e 94 56 04 	call	0x8ac	; 0x8ac <_ZN3LED6LED_ONEv>
			red_led.LED_OFF();
     aba:	ce 01       	movw	r24, r28
     abc:	43 96       	adiw	r24, 0x13	; 19
     abe:	0e 94 31 04 	call	0x862	; 0x862 <_ZN3LED7LED_OFFEv>
			fan.Motor_Duty(75);
     ac2:	6b e4       	ldi	r22, 0x4B	; 75
     ac4:	ce 01       	movw	r24, r28
     ac6:	02 96       	adiw	r24, 0x02	; 2
     ac8:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_ZN8DC_MOTOR10Motor_DutyEh>
			fan_duty =75;
     acc:	8b e4       	ldi	r24, 0x4B	; 75
     ace:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
			lcd1.LCD_Clear();
     ad2:	82 e8       	ldi	r24, 0x82	; 130
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	0e 94 10 04 	call	0x820	; 0x820 <_ZN3LCD9LCD_ClearEv>
			Display();		
     ada:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <_Z7Displayv>
     ade:	2f ef       	ldi	r18, 0xFF	; 255
     ae0:	80 e7       	ldi	r24, 0x70	; 112
     ae2:	92 e0       	ldi	r25, 0x02	; 2
     ae4:	21 50       	subi	r18, 0x01	; 1
     ae6:	80 40       	sbci	r24, 0x00	; 0
     ae8:	90 40       	sbci	r25, 0x00	; 0
     aea:	e1 f7       	brne	.-8      	; 0xae4 <main+0x15c>
     aec:	00 c0       	rjmp	.+0      	; 0xaee <main+0x166>
     aee:	00 00       	nop
     af0:	76 cf       	rjmp	.-276    	; 0x9de <main+0x56>
			_delay_ms(100);
		}
		else if (temprature>=30)
     af2:	20 e0       	ldi	r18, 0x00	; 0
     af4:	30 e0       	ldi	r19, 0x00	; 0
     af6:	40 ef       	ldi	r20, 0xF0	; 240
     af8:	51 e4       	ldi	r21, 0x41	; 65
     afa:	c7 01       	movw	r24, r14
     afc:	b6 01       	movw	r22, r12
     afe:	0e 94 d8 07 	call	0xfb0	; 0xfb0 <__gesf2>
     b02:	88 23       	and	r24, r24
     b04:	0c f4       	brge	.+2      	; 0xb08 <main+0x180>
     b06:	6b cf       	rjmp	.-298    	; 0x9de <main+0x56>
		{
			green_led.LED_ON();
     b08:	ce 01       	movw	r24, r28
     b0a:	0b 96       	adiw	r24, 0x0b	; 11
     b0c:	0e 94 56 04 	call	0x8ac	; 0x8ac <_ZN3LED6LED_ONEv>
			yellow_led.LED_ON();
     b10:	ce 01       	movw	r24, r28
     b12:	0f 96       	adiw	r24, 0x0f	; 15
     b14:	0e 94 56 04 	call	0x8ac	; 0x8ac <_ZN3LED6LED_ONEv>
			red_led.LED_ON();
     b18:	ce 01       	movw	r24, r28
     b1a:	43 96       	adiw	r24, 0x13	; 19
     b1c:	0e 94 56 04 	call	0x8ac	; 0x8ac <_ZN3LED6LED_ONEv>
			fan.Motor_Duty(100);
     b20:	64 e6       	ldi	r22, 0x64	; 100
     b22:	ce 01       	movw	r24, r28
     b24:	02 96       	adiw	r24, 0x02	; 2
     b26:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_ZN8DC_MOTOR10Motor_DutyEh>
			fan_duty =100;
     b2a:	84 e6       	ldi	r24, 0x64	; 100
     b2c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
			lcd1.LCD_Clear();
     b30:	82 e8       	ldi	r24, 0x82	; 130
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	0e 94 10 04 	call	0x820	; 0x820 <_ZN3LCD9LCD_ClearEv>
			Display();		
     b38:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <_Z7Displayv>
     b3c:	2f ef       	ldi	r18, 0xFF	; 255
     b3e:	80 e7       	ldi	r24, 0x70	; 112
     b40:	92 e0       	ldi	r25, 0x02	; 2
     b42:	21 50       	subi	r18, 0x01	; 1
     b44:	80 40       	sbci	r24, 0x00	; 0
     b46:	90 40       	sbci	r25, 0x00	; 0
     b48:	e1 f7       	brne	.-8      	; 0xb42 <main+0x1ba>
     b4a:	00 c0       	rjmp	.+0      	; 0xb4c <main+0x1c4>
     b4c:	00 00       	nop
     b4e:	47 cf       	rjmp	.-370    	; 0x9de <main+0x56>

00000b50 <_GLOBAL__sub_I_digital_read>:
		lcd1.LCD_Cursor_pos(1,0);
		lcd1.LCD_String(6,"Fan = ");
		lcd1.LCD_String(4,speed_buffer);
		lcd1.LCD_String(2,"%");
		_delay_ms(100);
     b50:	6f ef       	ldi	r22, 0xFF	; 255
     b52:	7f ef       	ldi	r23, 0xFF	; 255
     b54:	81 e0       	ldi	r24, 0x01	; 1
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 61 04 	call	0x8c2	; 0x8c2 <_Z41__static_initialization_and_destruction_0ii>
     b5c:	08 95       	ret

00000b5e <_ZN3PWMC1Ev>:
    TCCR1B=0x05;                                      /* Select CPU_clk/1024[T_tick=128us] */
    TCNT1 = (u16)(65536-(period_ms/1000*F_CPU/1024)); /* Load Counter Register with start value */ 
	TIMSK|=(1<<TOIE1);
	TCNT1 = 0;
	ovcallback=callback;
}
     b5e:	cf 93       	push	r28
     b60:	df 93       	push	r29
     b62:	ec 01       	movw	r28, r24
     b64:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <_ZN3PINC1Ev>
     b68:	42 e0       	ldi	r20, 0x02	; 2
     b6a:	6c e1       	ldi	r22, 0x1C	; 28
     b6c:	ce 01       	movw	r24, r28
     b6e:	0e 94 52 02 	call	0x4a4	; 0x4a4 <_ZN3PIN12DIO_Init_PinE5PinID9Direction>
     b72:	df 91       	pop	r29
     b74:	cf 91       	pop	r28
     b76:	08 95       	ret

00000b78 <_ZN3PWM11T1_PhasePWMEff>:
     b78:	cf 92       	push	r12
     b7a:	df 92       	push	r13
     b7c:	ef 92       	push	r14
     b7e:	ff 92       	push	r15
     b80:	0f 93       	push	r16
     b82:	1f 93       	push	r17
     b84:	cb 01       	movw	r24, r22
     b86:	ba 01       	movw	r22, r20
     b88:	68 01       	movw	r12, r16
     b8a:	79 01       	movw	r14, r18
     b8c:	23 e2       	ldi	r18, 0x23	; 35
     b8e:	2f bd       	out	0x2f, r18	; 47
     b90:	22 e1       	ldi	r18, 0x12	; 18
     b92:	2e bd       	out	0x2e, r18	; 46
     b94:	20 e0       	ldi	r18, 0x00	; 0
     b96:	30 e0       	ldi	r19, 0x00	; 0
     b98:	40 e8       	ldi	r20, 0x80	; 128
     b9a:	51 e4       	ldi	r21, 0x41	; 65
     b9c:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     ba0:	9b 01       	movw	r18, r22
     ba2:	ac 01       	movw	r20, r24
     ba4:	60 e0       	ldi	r22, 0x00	; 0
     ba6:	74 e2       	ldi	r23, 0x24	; 36
     ba8:	84 ef       	ldi	r24, 0xF4	; 244
     baa:	9a e4       	ldi	r25, 0x4A	; 74
     bac:	0e 94 85 06 	call	0xd0a	; 0xd0a <__divsf3>
     bb0:	0e 94 f7 06 	call	0xdee	; 0xdee <__fixunssfsi>
     bb4:	7b bd       	out	0x2b, r23	; 43
     bb6:	6a bd       	out	0x2a, r22	; 42
     bb8:	6a b5       	in	r22, 0x2a	; 42
     bba:	7b b5       	in	r23, 0x2b	; 43
     bbc:	80 e0       	ldi	r24, 0x00	; 0
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	0e 94 26 07 	call	0xe4c	; 0xe4c <__floatunsisf>
     bc4:	a7 01       	movw	r20, r14
     bc6:	96 01       	movw	r18, r12
     bc8:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     bcc:	20 e0       	ldi	r18, 0x00	; 0
     bce:	30 e0       	ldi	r19, 0x00	; 0
     bd0:	48 ec       	ldi	r20, 0xC8	; 200
     bd2:	52 e4       	ldi	r21, 0x42	; 66
     bd4:	0e 94 85 06 	call	0xd0a	; 0xd0a <__divsf3>
     bd8:	0e 94 f7 06 	call	0xdee	; 0xdee <__fixunssfsi>
     bdc:	79 bd       	out	0x29, r23	; 41
     bde:	68 bd       	out	0x28, r22	; 40
     be0:	1f 91       	pop	r17
     be2:	0f 91       	pop	r16
     be4:	ff 90       	pop	r15
     be6:	ef 90       	pop	r14
     be8:	df 90       	pop	r13
     bea:	cf 90       	pop	r12
     bec:	08 95       	ret

00000bee <__vector_6>:
     bee:	1f 92       	push	r1
     bf0:	0f 92       	push	r0
     bf2:	0f b6       	in	r0, 0x3f	; 63
     bf4:	0f 92       	push	r0
     bf6:	11 24       	eor	r1, r1
     bf8:	8f 93       	push	r24
     bfa:	9f 93       	push	r25
     bfc:	86 b5       	in	r24, 0x26	; 38
     bfe:	97 b5       	in	r25, 0x27	; 39
     c00:	90 93 9e 00 	sts	0x009E, r25	; 0x80009e <sample_ticks+0x1>
     c04:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <sample_ticks>
     c08:	9f 91       	pop	r25
     c0a:	8f 91       	pop	r24
     c0c:	0f 90       	pop	r0
     c0e:	0f be       	out	0x3f, r0	; 63
     c10:	0f 90       	pop	r0
     c12:	1f 90       	pop	r1
     c14:	18 95       	reti

00000c16 <__vector_9>:

ISR(TIMER1_OVF_vect)
{
     c16:	1f 92       	push	r1
     c18:	0f 92       	push	r0
     c1a:	0f b6       	in	r0, 0x3f	; 63
     c1c:	0f 92       	push	r0
     c1e:	11 24       	eor	r1, r1
     c20:	2f 93       	push	r18
     c22:	3f 93       	push	r19
     c24:	4f 93       	push	r20
     c26:	5f 93       	push	r21
     c28:	6f 93       	push	r22
     c2a:	7f 93       	push	r23
     c2c:	8f 93       	push	r24
     c2e:	9f 93       	push	r25
     c30:	af 93       	push	r26
     c32:	bf 93       	push	r27
     c34:	ef 93       	push	r30
     c36:	ff 93       	push	r31
	ovcallback();
     c38:	e0 91 9b 00 	lds	r30, 0x009B	; 0x80009b <_ZL10ovcallback>
     c3c:	f0 91 9c 00 	lds	r31, 0x009C	; 0x80009c <_ZL10ovcallback+0x1>
     c40:	09 95       	icall
}
     c42:	ff 91       	pop	r31
     c44:	ef 91       	pop	r30
     c46:	bf 91       	pop	r27
     c48:	af 91       	pop	r26
     c4a:	9f 91       	pop	r25
     c4c:	8f 91       	pop	r24
     c4e:	7f 91       	pop	r23
     c50:	6f 91       	pop	r22
     c52:	5f 91       	pop	r21
     c54:	4f 91       	pop	r20
     c56:	3f 91       	pop	r19
     c58:	2f 91       	pop	r18
     c5a:	0f 90       	pop	r0
     c5c:	0f be       	out	0x3f, r0	; 63
     c5e:	0f 90       	pop	r0
     c60:	1f 90       	pop	r1
     c62:	18 95       	reti

00000c64 <__vector_7>:

ISR(TIMER1_COMPA_vect)
{
     c64:	1f 92       	push	r1
     c66:	0f 92       	push	r0
     c68:	0f b6       	in	r0, 0x3f	; 63
     c6a:	0f 92       	push	r0
     c6c:	11 24       	eor	r1, r1
     c6e:	2f 93       	push	r18
     c70:	3f 93       	push	r19
     c72:	4f 93       	push	r20
     c74:	5f 93       	push	r21
     c76:	6f 93       	push	r22
     c78:	7f 93       	push	r23
     c7a:	8f 93       	push	r24
     c7c:	9f 93       	push	r25
     c7e:	af 93       	push	r26
     c80:	bf 93       	push	r27
     c82:	ef 93       	push	r30
     c84:	ff 93       	push	r31
	compAcallback();
     c86:	e0 91 99 00 	lds	r30, 0x0099	; 0x800099 <_ZL13compAcallback>
     c8a:	f0 91 9a 00 	lds	r31, 0x009A	; 0x80009a <_ZL13compAcallback+0x1>
     c8e:	09 95       	icall
}
     c90:	ff 91       	pop	r31
     c92:	ef 91       	pop	r30
     c94:	bf 91       	pop	r27
     c96:	af 91       	pop	r26
     c98:	9f 91       	pop	r25
     c9a:	8f 91       	pop	r24
     c9c:	7f 91       	pop	r23
     c9e:	6f 91       	pop	r22
     ca0:	5f 91       	pop	r21
     ca2:	4f 91       	pop	r20
     ca4:	3f 91       	pop	r19
     ca6:	2f 91       	pop	r18
     ca8:	0f 90       	pop	r0
     caa:	0f be       	out	0x3f, r0	; 63
     cac:	0f 90       	pop	r0
     cae:	1f 90       	pop	r1
     cb0:	18 95       	reti

00000cb2 <__vector_8>:
ISR(TIMER1_COMPB_vect)
{
     cb2:	1f 92       	push	r1
     cb4:	0f 92       	push	r0
     cb6:	0f b6       	in	r0, 0x3f	; 63
     cb8:	0f 92       	push	r0
     cba:	11 24       	eor	r1, r1
     cbc:	2f 93       	push	r18
     cbe:	3f 93       	push	r19
     cc0:	4f 93       	push	r20
     cc2:	5f 93       	push	r21
     cc4:	6f 93       	push	r22
     cc6:	7f 93       	push	r23
     cc8:	8f 93       	push	r24
     cca:	9f 93       	push	r25
     ccc:	af 93       	push	r26
     cce:	bf 93       	push	r27
     cd0:	ef 93       	push	r30
     cd2:	ff 93       	push	r31
	compBcallback();
     cd4:	e0 91 97 00 	lds	r30, 0x0097	; 0x800097 <_ZL13compBcallback>
     cd8:	f0 91 98 00 	lds	r31, 0x0098	; 0x800098 <_ZL13compBcallback+0x1>
     cdc:	09 95       	icall
}
     cde:	ff 91       	pop	r31
     ce0:	ef 91       	pop	r30
     ce2:	bf 91       	pop	r27
     ce4:	af 91       	pop	r26
     ce6:	9f 91       	pop	r25
     ce8:	8f 91       	pop	r24
     cea:	7f 91       	pop	r23
     cec:	6f 91       	pop	r22
     cee:	5f 91       	pop	r21
     cf0:	4f 91       	pop	r20
     cf2:	3f 91       	pop	r19
     cf4:	2f 91       	pop	r18
     cf6:	0f 90       	pop	r0
     cf8:	0f be       	out	0x3f, r0	; 63
     cfa:	0f 90       	pop	r0
     cfc:	1f 90       	pop	r1
     cfe:	18 95       	reti

00000d00 <__cmpsf2>:
     d00:	0e 94 63 07 	call	0xec6	; 0xec6 <__fp_cmp>
     d04:	08 f4       	brcc	.+2      	; 0xd08 <__cmpsf2+0x8>
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	08 95       	ret

00000d0a <__divsf3>:
     d0a:	0e 94 99 06 	call	0xd32	; 0xd32 <__divsf3x>
     d0e:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_round>
     d12:	0e 94 97 07 	call	0xf2e	; 0xf2e <__fp_pscB>
     d16:	58 f0       	brcs	.+22     	; 0xd2e <__divsf3+0x24>
     d18:	0e 94 90 07 	call	0xf20	; 0xf20 <__fp_pscA>
     d1c:	40 f0       	brcs	.+16     	; 0xd2e <__divsf3+0x24>
     d1e:	29 f4       	brne	.+10     	; 0xd2a <__divsf3+0x20>
     d20:	5f 3f       	cpi	r21, 0xFF	; 255
     d22:	29 f0       	breq	.+10     	; 0xd2e <__divsf3+0x24>
     d24:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <__fp_inf>
     d28:	51 11       	cpse	r21, r1
     d2a:	0c 94 d2 07 	jmp	0xfa4	; 0xfa4 <__fp_szero>
     d2e:	0c 94 8d 07 	jmp	0xf1a	; 0xf1a <__fp_nan>

00000d32 <__divsf3x>:
     d32:	0e 94 af 07 	call	0xf5e	; 0xf5e <__fp_split3>
     d36:	68 f3       	brcs	.-38     	; 0xd12 <__divsf3+0x8>

00000d38 <__divsf3_pse>:
     d38:	99 23       	and	r25, r25
     d3a:	b1 f3       	breq	.-20     	; 0xd28 <__divsf3+0x1e>
     d3c:	55 23       	and	r21, r21
     d3e:	91 f3       	breq	.-28     	; 0xd24 <__divsf3+0x1a>
     d40:	95 1b       	sub	r25, r21
     d42:	55 0b       	sbc	r21, r21
     d44:	bb 27       	eor	r27, r27
     d46:	aa 27       	eor	r26, r26
     d48:	62 17       	cp	r22, r18
     d4a:	73 07       	cpc	r23, r19
     d4c:	84 07       	cpc	r24, r20
     d4e:	38 f0       	brcs	.+14     	; 0xd5e <__divsf3_pse+0x26>
     d50:	9f 5f       	subi	r25, 0xFF	; 255
     d52:	5f 4f       	sbci	r21, 0xFF	; 255
     d54:	22 0f       	add	r18, r18
     d56:	33 1f       	adc	r19, r19
     d58:	44 1f       	adc	r20, r20
     d5a:	aa 1f       	adc	r26, r26
     d5c:	a9 f3       	breq	.-22     	; 0xd48 <__divsf3_pse+0x10>
     d5e:	35 d0       	rcall	.+106    	; 0xdca <__divsf3_pse+0x92>
     d60:	0e 2e       	mov	r0, r30
     d62:	3a f0       	brmi	.+14     	; 0xd72 <__divsf3_pse+0x3a>
     d64:	e0 e8       	ldi	r30, 0x80	; 128
     d66:	32 d0       	rcall	.+100    	; 0xdcc <__divsf3_pse+0x94>
     d68:	91 50       	subi	r25, 0x01	; 1
     d6a:	50 40       	sbci	r21, 0x00	; 0
     d6c:	e6 95       	lsr	r30
     d6e:	00 1c       	adc	r0, r0
     d70:	ca f7       	brpl	.-14     	; 0xd64 <__divsf3_pse+0x2c>
     d72:	2b d0       	rcall	.+86     	; 0xdca <__divsf3_pse+0x92>
     d74:	fe 2f       	mov	r31, r30
     d76:	29 d0       	rcall	.+82     	; 0xdca <__divsf3_pse+0x92>
     d78:	66 0f       	add	r22, r22
     d7a:	77 1f       	adc	r23, r23
     d7c:	88 1f       	adc	r24, r24
     d7e:	bb 1f       	adc	r27, r27
     d80:	26 17       	cp	r18, r22
     d82:	37 07       	cpc	r19, r23
     d84:	48 07       	cpc	r20, r24
     d86:	ab 07       	cpc	r26, r27
     d88:	b0 e8       	ldi	r27, 0x80	; 128
     d8a:	09 f0       	breq	.+2      	; 0xd8e <__divsf3_pse+0x56>
     d8c:	bb 0b       	sbc	r27, r27
     d8e:	80 2d       	mov	r24, r0
     d90:	bf 01       	movw	r22, r30
     d92:	ff 27       	eor	r31, r31
     d94:	93 58       	subi	r25, 0x83	; 131
     d96:	5f 4f       	sbci	r21, 0xFF	; 255
     d98:	3a f0       	brmi	.+14     	; 0xda8 <__divsf3_pse+0x70>
     d9a:	9e 3f       	cpi	r25, 0xFE	; 254
     d9c:	51 05       	cpc	r21, r1
     d9e:	78 f0       	brcs	.+30     	; 0xdbe <__divsf3_pse+0x86>
     da0:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <__fp_inf>
     da4:	0c 94 d2 07 	jmp	0xfa4	; 0xfa4 <__fp_szero>
     da8:	5f 3f       	cpi	r21, 0xFF	; 255
     daa:	e4 f3       	brlt	.-8      	; 0xda4 <__divsf3_pse+0x6c>
     dac:	98 3e       	cpi	r25, 0xE8	; 232
     dae:	d4 f3       	brlt	.-12     	; 0xda4 <__divsf3_pse+0x6c>
     db0:	86 95       	lsr	r24
     db2:	77 95       	ror	r23
     db4:	67 95       	ror	r22
     db6:	b7 95       	ror	r27
     db8:	f7 95       	ror	r31
     dba:	9f 5f       	subi	r25, 0xFF	; 255
     dbc:	c9 f7       	brne	.-14     	; 0xdb0 <__divsf3_pse+0x78>
     dbe:	88 0f       	add	r24, r24
     dc0:	91 1d       	adc	r25, r1
     dc2:	96 95       	lsr	r25
     dc4:	87 95       	ror	r24
     dc6:	97 f9       	bld	r25, 7
     dc8:	08 95       	ret
     dca:	e1 e0       	ldi	r30, 0x01	; 1
     dcc:	66 0f       	add	r22, r22
     dce:	77 1f       	adc	r23, r23
     dd0:	88 1f       	adc	r24, r24
     dd2:	bb 1f       	adc	r27, r27
     dd4:	62 17       	cp	r22, r18
     dd6:	73 07       	cpc	r23, r19
     dd8:	84 07       	cpc	r24, r20
     dda:	ba 07       	cpc	r27, r26
     ddc:	20 f0       	brcs	.+8      	; 0xde6 <__divsf3_pse+0xae>
     dde:	62 1b       	sub	r22, r18
     de0:	73 0b       	sbc	r23, r19
     de2:	84 0b       	sbc	r24, r20
     de4:	ba 0b       	sbc	r27, r26
     de6:	ee 1f       	adc	r30, r30
     de8:	88 f7       	brcc	.-30     	; 0xdcc <__divsf3_pse+0x94>
     dea:	e0 95       	com	r30
     dec:	08 95       	ret

00000dee <__fixunssfsi>:
     dee:	0e 94 b7 07 	call	0xf6e	; 0xf6e <__fp_splitA>
     df2:	88 f0       	brcs	.+34     	; 0xe16 <__fixunssfsi+0x28>
     df4:	9f 57       	subi	r25, 0x7F	; 127
     df6:	98 f0       	brcs	.+38     	; 0xe1e <__fixunssfsi+0x30>
     df8:	b9 2f       	mov	r27, r25
     dfa:	99 27       	eor	r25, r25
     dfc:	b7 51       	subi	r27, 0x17	; 23
     dfe:	b0 f0       	brcs	.+44     	; 0xe2c <__fixunssfsi+0x3e>
     e00:	e1 f0       	breq	.+56     	; 0xe3a <__fixunssfsi+0x4c>
     e02:	66 0f       	add	r22, r22
     e04:	77 1f       	adc	r23, r23
     e06:	88 1f       	adc	r24, r24
     e08:	99 1f       	adc	r25, r25
     e0a:	1a f0       	brmi	.+6      	; 0xe12 <__fixunssfsi+0x24>
     e0c:	ba 95       	dec	r27
     e0e:	c9 f7       	brne	.-14     	; 0xe02 <__fixunssfsi+0x14>
     e10:	14 c0       	rjmp	.+40     	; 0xe3a <__fixunssfsi+0x4c>
     e12:	b1 30       	cpi	r27, 0x01	; 1
     e14:	91 f0       	breq	.+36     	; 0xe3a <__fixunssfsi+0x4c>
     e16:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <__fp_zero>
     e1a:	b1 e0       	ldi	r27, 0x01	; 1
     e1c:	08 95       	ret
     e1e:	0c 94 d1 07 	jmp	0xfa2	; 0xfa2 <__fp_zero>
     e22:	67 2f       	mov	r22, r23
     e24:	78 2f       	mov	r23, r24
     e26:	88 27       	eor	r24, r24
     e28:	b8 5f       	subi	r27, 0xF8	; 248
     e2a:	39 f0       	breq	.+14     	; 0xe3a <__fixunssfsi+0x4c>
     e2c:	b9 3f       	cpi	r27, 0xF9	; 249
     e2e:	cc f3       	brlt	.-14     	; 0xe22 <__fixunssfsi+0x34>
     e30:	86 95       	lsr	r24
     e32:	77 95       	ror	r23
     e34:	67 95       	ror	r22
     e36:	b3 95       	inc	r27
     e38:	d9 f7       	brne	.-10     	; 0xe30 <__fixunssfsi+0x42>
     e3a:	3e f4       	brtc	.+14     	; 0xe4a <__fixunssfsi+0x5c>
     e3c:	90 95       	com	r25
     e3e:	80 95       	com	r24
     e40:	70 95       	com	r23
     e42:	61 95       	neg	r22
     e44:	7f 4f       	sbci	r23, 0xFF	; 255
     e46:	8f 4f       	sbci	r24, 0xFF	; 255
     e48:	9f 4f       	sbci	r25, 0xFF	; 255
     e4a:	08 95       	ret

00000e4c <__floatunsisf>:
     e4c:	e8 94       	clt
     e4e:	09 c0       	rjmp	.+18     	; 0xe62 <__floatsisf+0x12>

00000e50 <__floatsisf>:
     e50:	97 fb       	bst	r25, 7
     e52:	3e f4       	brtc	.+14     	; 0xe62 <__floatsisf+0x12>
     e54:	90 95       	com	r25
     e56:	80 95       	com	r24
     e58:	70 95       	com	r23
     e5a:	61 95       	neg	r22
     e5c:	7f 4f       	sbci	r23, 0xFF	; 255
     e5e:	8f 4f       	sbci	r24, 0xFF	; 255
     e60:	9f 4f       	sbci	r25, 0xFF	; 255
     e62:	99 23       	and	r25, r25
     e64:	a9 f0       	breq	.+42     	; 0xe90 <__floatsisf+0x40>
     e66:	f9 2f       	mov	r31, r25
     e68:	96 e9       	ldi	r25, 0x96	; 150
     e6a:	bb 27       	eor	r27, r27
     e6c:	93 95       	inc	r25
     e6e:	f6 95       	lsr	r31
     e70:	87 95       	ror	r24
     e72:	77 95       	ror	r23
     e74:	67 95       	ror	r22
     e76:	b7 95       	ror	r27
     e78:	f1 11       	cpse	r31, r1
     e7a:	f8 cf       	rjmp	.-16     	; 0xe6c <__floatsisf+0x1c>
     e7c:	fa f4       	brpl	.+62     	; 0xebc <__floatsisf+0x6c>
     e7e:	bb 0f       	add	r27, r27
     e80:	11 f4       	brne	.+4      	; 0xe86 <__floatsisf+0x36>
     e82:	60 ff       	sbrs	r22, 0
     e84:	1b c0       	rjmp	.+54     	; 0xebc <__floatsisf+0x6c>
     e86:	6f 5f       	subi	r22, 0xFF	; 255
     e88:	7f 4f       	sbci	r23, 0xFF	; 255
     e8a:	8f 4f       	sbci	r24, 0xFF	; 255
     e8c:	9f 4f       	sbci	r25, 0xFF	; 255
     e8e:	16 c0       	rjmp	.+44     	; 0xebc <__floatsisf+0x6c>
     e90:	88 23       	and	r24, r24
     e92:	11 f0       	breq	.+4      	; 0xe98 <__floatsisf+0x48>
     e94:	96 e9       	ldi	r25, 0x96	; 150
     e96:	11 c0       	rjmp	.+34     	; 0xeba <__floatsisf+0x6a>
     e98:	77 23       	and	r23, r23
     e9a:	21 f0       	breq	.+8      	; 0xea4 <__floatsisf+0x54>
     e9c:	9e e8       	ldi	r25, 0x8E	; 142
     e9e:	87 2f       	mov	r24, r23
     ea0:	76 2f       	mov	r23, r22
     ea2:	05 c0       	rjmp	.+10     	; 0xeae <__floatsisf+0x5e>
     ea4:	66 23       	and	r22, r22
     ea6:	71 f0       	breq	.+28     	; 0xec4 <__floatsisf+0x74>
     ea8:	96 e8       	ldi	r25, 0x86	; 134
     eaa:	86 2f       	mov	r24, r22
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	60 e0       	ldi	r22, 0x00	; 0
     eb0:	2a f0       	brmi	.+10     	; 0xebc <__floatsisf+0x6c>
     eb2:	9a 95       	dec	r25
     eb4:	66 0f       	add	r22, r22
     eb6:	77 1f       	adc	r23, r23
     eb8:	88 1f       	adc	r24, r24
     eba:	da f7       	brpl	.-10     	; 0xeb2 <__floatsisf+0x62>
     ebc:	88 0f       	add	r24, r24
     ebe:	96 95       	lsr	r25
     ec0:	87 95       	ror	r24
     ec2:	97 f9       	bld	r25, 7
     ec4:	08 95       	ret

00000ec6 <__fp_cmp>:
     ec6:	99 0f       	add	r25, r25
     ec8:	00 08       	sbc	r0, r0
     eca:	55 0f       	add	r21, r21
     ecc:	aa 0b       	sbc	r26, r26
     ece:	e0 e8       	ldi	r30, 0x80	; 128
     ed0:	fe ef       	ldi	r31, 0xFE	; 254
     ed2:	16 16       	cp	r1, r22
     ed4:	17 06       	cpc	r1, r23
     ed6:	e8 07       	cpc	r30, r24
     ed8:	f9 07       	cpc	r31, r25
     eda:	c0 f0       	brcs	.+48     	; 0xf0c <__fp_cmp+0x46>
     edc:	12 16       	cp	r1, r18
     ede:	13 06       	cpc	r1, r19
     ee0:	e4 07       	cpc	r30, r20
     ee2:	f5 07       	cpc	r31, r21
     ee4:	98 f0       	brcs	.+38     	; 0xf0c <__fp_cmp+0x46>
     ee6:	62 1b       	sub	r22, r18
     ee8:	73 0b       	sbc	r23, r19
     eea:	84 0b       	sbc	r24, r20
     eec:	95 0b       	sbc	r25, r21
     eee:	39 f4       	brne	.+14     	; 0xefe <__fp_cmp+0x38>
     ef0:	0a 26       	eor	r0, r26
     ef2:	61 f0       	breq	.+24     	; 0xf0c <__fp_cmp+0x46>
     ef4:	23 2b       	or	r18, r19
     ef6:	24 2b       	or	r18, r20
     ef8:	25 2b       	or	r18, r21
     efa:	21 f4       	brne	.+8      	; 0xf04 <__fp_cmp+0x3e>
     efc:	08 95       	ret
     efe:	0a 26       	eor	r0, r26
     f00:	09 f4       	brne	.+2      	; 0xf04 <__fp_cmp+0x3e>
     f02:	a1 40       	sbci	r26, 0x01	; 1
     f04:	a6 95       	lsr	r26
     f06:	8f ef       	ldi	r24, 0xFF	; 255
     f08:	81 1d       	adc	r24, r1
     f0a:	81 1d       	adc	r24, r1
     f0c:	08 95       	ret

00000f0e <__fp_inf>:
     f0e:	97 f9       	bld	r25, 7
     f10:	9f 67       	ori	r25, 0x7F	; 127
     f12:	80 e8       	ldi	r24, 0x80	; 128
     f14:	70 e0       	ldi	r23, 0x00	; 0
     f16:	60 e0       	ldi	r22, 0x00	; 0
     f18:	08 95       	ret

00000f1a <__fp_nan>:
     f1a:	9f ef       	ldi	r25, 0xFF	; 255
     f1c:	80 ec       	ldi	r24, 0xC0	; 192
     f1e:	08 95       	ret

00000f20 <__fp_pscA>:
     f20:	00 24       	eor	r0, r0
     f22:	0a 94       	dec	r0
     f24:	16 16       	cp	r1, r22
     f26:	17 06       	cpc	r1, r23
     f28:	18 06       	cpc	r1, r24
     f2a:	09 06       	cpc	r0, r25
     f2c:	08 95       	ret

00000f2e <__fp_pscB>:
     f2e:	00 24       	eor	r0, r0
     f30:	0a 94       	dec	r0
     f32:	12 16       	cp	r1, r18
     f34:	13 06       	cpc	r1, r19
     f36:	14 06       	cpc	r1, r20
     f38:	05 06       	cpc	r0, r21
     f3a:	08 95       	ret

00000f3c <__fp_round>:
     f3c:	09 2e       	mov	r0, r25
     f3e:	03 94       	inc	r0
     f40:	00 0c       	add	r0, r0
     f42:	11 f4       	brne	.+4      	; 0xf48 <__fp_round+0xc>
     f44:	88 23       	and	r24, r24
     f46:	52 f0       	brmi	.+20     	; 0xf5c <__fp_round+0x20>
     f48:	bb 0f       	add	r27, r27
     f4a:	40 f4       	brcc	.+16     	; 0xf5c <__fp_round+0x20>
     f4c:	bf 2b       	or	r27, r31
     f4e:	11 f4       	brne	.+4      	; 0xf54 <__fp_round+0x18>
     f50:	60 ff       	sbrs	r22, 0
     f52:	04 c0       	rjmp	.+8      	; 0xf5c <__fp_round+0x20>
     f54:	6f 5f       	subi	r22, 0xFF	; 255
     f56:	7f 4f       	sbci	r23, 0xFF	; 255
     f58:	8f 4f       	sbci	r24, 0xFF	; 255
     f5a:	9f 4f       	sbci	r25, 0xFF	; 255
     f5c:	08 95       	ret

00000f5e <__fp_split3>:
     f5e:	57 fd       	sbrc	r21, 7
     f60:	90 58       	subi	r25, 0x80	; 128
     f62:	44 0f       	add	r20, r20
     f64:	55 1f       	adc	r21, r21
     f66:	59 f0       	breq	.+22     	; 0xf7e <__fp_splitA+0x10>
     f68:	5f 3f       	cpi	r21, 0xFF	; 255
     f6a:	71 f0       	breq	.+28     	; 0xf88 <__fp_splitA+0x1a>
     f6c:	47 95       	ror	r20

00000f6e <__fp_splitA>:
     f6e:	88 0f       	add	r24, r24
     f70:	97 fb       	bst	r25, 7
     f72:	99 1f       	adc	r25, r25
     f74:	61 f0       	breq	.+24     	; 0xf8e <__fp_splitA+0x20>
     f76:	9f 3f       	cpi	r25, 0xFF	; 255
     f78:	79 f0       	breq	.+30     	; 0xf98 <__fp_splitA+0x2a>
     f7a:	87 95       	ror	r24
     f7c:	08 95       	ret
     f7e:	12 16       	cp	r1, r18
     f80:	13 06       	cpc	r1, r19
     f82:	14 06       	cpc	r1, r20
     f84:	55 1f       	adc	r21, r21
     f86:	f2 cf       	rjmp	.-28     	; 0xf6c <__fp_split3+0xe>
     f88:	46 95       	lsr	r20
     f8a:	f1 df       	rcall	.-30     	; 0xf6e <__fp_splitA>
     f8c:	08 c0       	rjmp	.+16     	; 0xf9e <__fp_splitA+0x30>
     f8e:	16 16       	cp	r1, r22
     f90:	17 06       	cpc	r1, r23
     f92:	18 06       	cpc	r1, r24
     f94:	99 1f       	adc	r25, r25
     f96:	f1 cf       	rjmp	.-30     	; 0xf7a <__fp_splitA+0xc>
     f98:	86 95       	lsr	r24
     f9a:	71 05       	cpc	r23, r1
     f9c:	61 05       	cpc	r22, r1
     f9e:	08 94       	sec
     fa0:	08 95       	ret

00000fa2 <__fp_zero>:
     fa2:	e8 94       	clt

00000fa4 <__fp_szero>:
     fa4:	bb 27       	eor	r27, r27
     fa6:	66 27       	eor	r22, r22
     fa8:	77 27       	eor	r23, r23
     faa:	cb 01       	movw	r24, r22
     fac:	97 f9       	bld	r25, 7
     fae:	08 95       	ret

00000fb0 <__gesf2>:
     fb0:	0e 94 63 07 	call	0xec6	; 0xec6 <__fp_cmp>
     fb4:	08 f4       	brcc	.+2      	; 0xfb8 <__gesf2+0x8>
     fb6:	8f ef       	ldi	r24, 0xFF	; 255
     fb8:	08 95       	ret

00000fba <__mulsf3>:
     fba:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__mulsf3x>
     fbe:	0c 94 9e 07 	jmp	0xf3c	; 0xf3c <__fp_round>
     fc2:	0e 94 90 07 	call	0xf20	; 0xf20 <__fp_pscA>
     fc6:	38 f0       	brcs	.+14     	; 0xfd6 <__mulsf3+0x1c>
     fc8:	0e 94 97 07 	call	0xf2e	; 0xf2e <__fp_pscB>
     fcc:	20 f0       	brcs	.+8      	; 0xfd6 <__mulsf3+0x1c>
     fce:	95 23       	and	r25, r21
     fd0:	11 f0       	breq	.+4      	; 0xfd6 <__mulsf3+0x1c>
     fd2:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <__fp_inf>
     fd6:	0c 94 8d 07 	jmp	0xf1a	; 0xf1a <__fp_nan>
     fda:	11 24       	eor	r1, r1
     fdc:	0c 94 d2 07 	jmp	0xfa4	; 0xfa4 <__fp_szero>

00000fe0 <__mulsf3x>:
     fe0:	0e 94 af 07 	call	0xf5e	; 0xf5e <__fp_split3>
     fe4:	70 f3       	brcs	.-36     	; 0xfc2 <__mulsf3+0x8>

00000fe6 <__mulsf3_pse>:
     fe6:	95 9f       	mul	r25, r21
     fe8:	c1 f3       	breq	.-16     	; 0xfda <__mulsf3+0x20>
     fea:	95 0f       	add	r25, r21
     fec:	50 e0       	ldi	r21, 0x00	; 0
     fee:	55 1f       	adc	r21, r21
     ff0:	62 9f       	mul	r22, r18
     ff2:	f0 01       	movw	r30, r0
     ff4:	72 9f       	mul	r23, r18
     ff6:	bb 27       	eor	r27, r27
     ff8:	f0 0d       	add	r31, r0
     ffa:	b1 1d       	adc	r27, r1
     ffc:	63 9f       	mul	r22, r19
     ffe:	aa 27       	eor	r26, r26
    1000:	f0 0d       	add	r31, r0
    1002:	b1 1d       	adc	r27, r1
    1004:	aa 1f       	adc	r26, r26
    1006:	64 9f       	mul	r22, r20
    1008:	66 27       	eor	r22, r22
    100a:	b0 0d       	add	r27, r0
    100c:	a1 1d       	adc	r26, r1
    100e:	66 1f       	adc	r22, r22
    1010:	82 9f       	mul	r24, r18
    1012:	22 27       	eor	r18, r18
    1014:	b0 0d       	add	r27, r0
    1016:	a1 1d       	adc	r26, r1
    1018:	62 1f       	adc	r22, r18
    101a:	73 9f       	mul	r23, r19
    101c:	b0 0d       	add	r27, r0
    101e:	a1 1d       	adc	r26, r1
    1020:	62 1f       	adc	r22, r18
    1022:	83 9f       	mul	r24, r19
    1024:	a0 0d       	add	r26, r0
    1026:	61 1d       	adc	r22, r1
    1028:	22 1f       	adc	r18, r18
    102a:	74 9f       	mul	r23, r20
    102c:	33 27       	eor	r19, r19
    102e:	a0 0d       	add	r26, r0
    1030:	61 1d       	adc	r22, r1
    1032:	23 1f       	adc	r18, r19
    1034:	84 9f       	mul	r24, r20
    1036:	60 0d       	add	r22, r0
    1038:	21 1d       	adc	r18, r1
    103a:	82 2f       	mov	r24, r18
    103c:	76 2f       	mov	r23, r22
    103e:	6a 2f       	mov	r22, r26
    1040:	11 24       	eor	r1, r1
    1042:	9f 57       	subi	r25, 0x7F	; 127
    1044:	50 40       	sbci	r21, 0x00	; 0
    1046:	9a f0       	brmi	.+38     	; 0x106e <__mulsf3_pse+0x88>
    1048:	f1 f0       	breq	.+60     	; 0x1086 <__mulsf3_pse+0xa0>
    104a:	88 23       	and	r24, r24
    104c:	4a f0       	brmi	.+18     	; 0x1060 <__mulsf3_pse+0x7a>
    104e:	ee 0f       	add	r30, r30
    1050:	ff 1f       	adc	r31, r31
    1052:	bb 1f       	adc	r27, r27
    1054:	66 1f       	adc	r22, r22
    1056:	77 1f       	adc	r23, r23
    1058:	88 1f       	adc	r24, r24
    105a:	91 50       	subi	r25, 0x01	; 1
    105c:	50 40       	sbci	r21, 0x00	; 0
    105e:	a9 f7       	brne	.-22     	; 0x104a <__mulsf3_pse+0x64>
    1060:	9e 3f       	cpi	r25, 0xFE	; 254
    1062:	51 05       	cpc	r21, r1
    1064:	80 f0       	brcs	.+32     	; 0x1086 <__mulsf3_pse+0xa0>
    1066:	0c 94 87 07 	jmp	0xf0e	; 0xf0e <__fp_inf>
    106a:	0c 94 d2 07 	jmp	0xfa4	; 0xfa4 <__fp_szero>
    106e:	5f 3f       	cpi	r21, 0xFF	; 255
    1070:	e4 f3       	brlt	.-8      	; 0x106a <__mulsf3_pse+0x84>
    1072:	98 3e       	cpi	r25, 0xE8	; 232
    1074:	d4 f3       	brlt	.-12     	; 0x106a <__mulsf3_pse+0x84>
    1076:	86 95       	lsr	r24
    1078:	77 95       	ror	r23
    107a:	67 95       	ror	r22
    107c:	b7 95       	ror	r27
    107e:	f7 95       	ror	r31
    1080:	e7 95       	ror	r30
    1082:	9f 5f       	subi	r25, 0xFF	; 255
    1084:	c1 f7       	brne	.-16     	; 0x1076 <__mulsf3_pse+0x90>
    1086:	fe 2b       	or	r31, r30
    1088:	88 0f       	add	r24, r24
    108a:	91 1d       	adc	r25, r1
    108c:	96 95       	lsr	r25
    108e:	87 95       	ror	r24
    1090:	97 f9       	bld	r25, 7
    1092:	08 95       	ret

00001094 <__tablejump2__>:
    1094:	ee 0f       	add	r30, r30
    1096:	ff 1f       	adc	r31, r31
    1098:	05 90       	lpm	r0, Z+
    109a:	f4 91       	lpm	r31, Z
    109c:	e0 2d       	mov	r30, r0
    109e:	09 94       	ijmp

000010a0 <__itoa_ncheck>:
    10a0:	bb 27       	eor	r27, r27
    10a2:	4a 30       	cpi	r20, 0x0A	; 10
    10a4:	31 f4       	brne	.+12     	; 0x10b2 <__itoa_ncheck+0x12>
    10a6:	99 23       	and	r25, r25
    10a8:	22 f4       	brpl	.+8      	; 0x10b2 <__itoa_ncheck+0x12>
    10aa:	bd e2       	ldi	r27, 0x2D	; 45
    10ac:	90 95       	com	r25
    10ae:	81 95       	neg	r24
    10b0:	9f 4f       	sbci	r25, 0xFF	; 255
    10b2:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__utoa_common>

000010b6 <__utoa_ncheck>:
    10b6:	bb 27       	eor	r27, r27

000010b8 <__utoa_common>:
    10b8:	fb 01       	movw	r30, r22
    10ba:	55 27       	eor	r21, r21
    10bc:	aa 27       	eor	r26, r26
    10be:	88 0f       	add	r24, r24
    10c0:	99 1f       	adc	r25, r25
    10c2:	aa 1f       	adc	r26, r26
    10c4:	a4 17       	cp	r26, r20
    10c6:	10 f0       	brcs	.+4      	; 0x10cc <__utoa_common+0x14>
    10c8:	a4 1b       	sub	r26, r20
    10ca:	83 95       	inc	r24
    10cc:	50 51       	subi	r21, 0x10	; 16
    10ce:	b9 f7       	brne	.-18     	; 0x10be <__utoa_common+0x6>
    10d0:	a0 5d       	subi	r26, 0xD0	; 208
    10d2:	aa 33       	cpi	r26, 0x3A	; 58
    10d4:	08 f0       	brcs	.+2      	; 0x10d8 <__utoa_common+0x20>
    10d6:	a9 5d       	subi	r26, 0xD9	; 217
    10d8:	a1 93       	st	Z+, r26
    10da:	00 97       	sbiw	r24, 0x00	; 0
    10dc:	79 f7       	brne	.-34     	; 0x10bc <__utoa_common+0x4>
    10de:	b1 11       	cpse	r27, r1
    10e0:	b1 93       	st	Z+, r27
    10e2:	11 92       	st	Z+, r1
    10e4:	cb 01       	movw	r24, r22
    10e6:	0c 94 75 08 	jmp	0x10ea	; 0x10ea <strrev>

000010ea <strrev>:
    10ea:	dc 01       	movw	r26, r24
    10ec:	fc 01       	movw	r30, r24
    10ee:	67 2f       	mov	r22, r23
    10f0:	71 91       	ld	r23, Z+
    10f2:	77 23       	and	r23, r23
    10f4:	e1 f7       	brne	.-8      	; 0x10ee <strrev+0x4>
    10f6:	32 97       	sbiw	r30, 0x02	; 2
    10f8:	04 c0       	rjmp	.+8      	; 0x1102 <strrev+0x18>
    10fa:	7c 91       	ld	r23, X
    10fc:	6d 93       	st	X+, r22
    10fe:	70 83       	st	Z, r23
    1100:	62 91       	ld	r22, -Z
    1102:	ae 17       	cp	r26, r30
    1104:	bf 07       	cpc	r27, r31
    1106:	c8 f3       	brcs	.-14     	; 0x10fa <strrev+0x10>
    1108:	08 95       	ret

0000110a <_exit>:
    110a:	f8 94       	cli

0000110c <__stop_program>:
    110c:	ff cf       	rjmp	.-2      	; 0x110c <__stop_program>
